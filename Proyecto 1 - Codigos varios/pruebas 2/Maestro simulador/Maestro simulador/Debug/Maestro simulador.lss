
Maestro simulador.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000050  00800100  00000e8a  00000f1e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e8a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800150  00800150  00000f6e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000f6e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000fcc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  0000100c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c12  00000000  00000000  0000108c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008b3  00000000  00000000  00001c9e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000551  00000000  00000000  00002551  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000016c  00000000  00000000  00002aa4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000538  00000000  00000000  00002c10  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000367  00000000  00000000  00003148  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  000034af  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ea e8       	ldi	r30, 0x8A	; 138
  7c:	fe e0       	ldi	r31, 0x0E	; 14
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 35       	cpi	r26, 0x50	; 80
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e5       	ldi	r26, 0x50	; 80
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ac 35       	cpi	r26, 0x5C	; 92
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 94 01 	call	0x328	; 0x328 <main>
  9e:	0c 94 43 07 	jmp	0xe86	; 0xe86 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <float_to_string>:
float peso_simulado = 0.0f;
float distancia_simulada = 0.0f;
float temperatura_simulada = 0.0f;

// Función para convertir float a string
void float_to_string(float num, char *buffer, int precision) {
  a6:	6f 92       	push	r6
  a8:	7f 92       	push	r7
  aa:	8f 92       	push	r8
  ac:	9f 92       	push	r9
  ae:	af 92       	push	r10
  b0:	bf 92       	push	r11
  b2:	cf 92       	push	r12
  b4:	df 92       	push	r13
  b6:	ef 92       	push	r14
  b8:	ff 92       	push	r15
  ba:	0f 93       	push	r16
  bc:	1f 93       	push	r17
  be:	cf 93       	push	r28
  c0:	df 93       	push	r29
  c2:	4b 01       	movw	r8, r22
  c4:	5c 01       	movw	r10, r24
  c6:	74 2e       	mov	r7, r20
  c8:	65 2e       	mov	r6, r21
  ca:	89 01       	movw	r16, r18
	int integer_part = (int)num;
  cc:	0e 94 41 02 	call	0x482	; 0x482 <__fixsfsi>
  d0:	6b 01       	movw	r12, r22
  d2:	7c 01       	movw	r14, r24
	float decimal_part = num - integer_part;
  d4:	07 2e       	mov	r0, r23
  d6:	00 0c       	add	r0, r0
  d8:	88 0b       	sbc	r24, r24
  da:	99 0b       	sbc	r25, r25
  dc:	0e 94 79 02 	call	0x4f2	; 0x4f2 <__floatsisf>
  e0:	9b 01       	movw	r18, r22
  e2:	ac 01       	movw	r20, r24
  e4:	c5 01       	movw	r24, r10
  e6:	b4 01       	movw	r22, r8
  e8:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <__subsf3>
	
	// Convertir parte decimal
	for (int i = 0; i < precision; i++) {
  ec:	c0 e0       	ldi	r28, 0x00	; 0
  ee:	d0 e0       	ldi	r29, 0x00	; 0
  f0:	07 c0       	rjmp	.+14     	; 0x100 <float_to_string+0x5a>
		decimal_part *= 10.0f;
  f2:	20 e0       	ldi	r18, 0x00	; 0
  f4:	30 e0       	ldi	r19, 0x00	; 0
  f6:	40 e2       	ldi	r20, 0x20	; 32
  f8:	51 e4       	ldi	r21, 0x41	; 65
  fa:	0e 94 05 03 	call	0x60a	; 0x60a <__mulsf3>
void float_to_string(float num, char *buffer, int precision) {
	int integer_part = (int)num;
	float decimal_part = num - integer_part;
	
	// Convertir parte decimal
	for (int i = 0; i < precision; i++) {
  fe:	21 96       	adiw	r28, 0x01	; 1
 100:	c0 17       	cp	r28, r16
 102:	d1 07       	cpc	r29, r17
 104:	b4 f3       	brlt	.-20     	; 0xf2 <float_to_string+0x4c>
		decimal_part *= 10.0f;
	}
	int decimal_int = (int)decimal_part;
 106:	0e 94 41 02 	call	0x482	; 0x482 <__fixsfsi>
	
	// Crear string
	if (precision > 0) {
 10a:	10 16       	cp	r1, r16
 10c:	11 06       	cpc	r1, r17
 10e:	ac f4       	brge	.+42     	; 0x13a <float_to_string+0x94>
		sprintf(buffer, "%d.%d", integer_part, decimal_int);
 110:	7f 93       	push	r23
 112:	6f 93       	push	r22
 114:	df 92       	push	r13
 116:	cf 92       	push	r12
 118:	84 e0       	ldi	r24, 0x04	; 4
 11a:	91 e0       	ldi	r25, 0x01	; 1
 11c:	9f 93       	push	r25
 11e:	8f 93       	push	r24
 120:	6f 92       	push	r6
 122:	7f 92       	push	r7
 124:	0e 94 f6 03 	call	0x7ec	; 0x7ec <sprintf>
 128:	8d b7       	in	r24, 0x3d	; 61
 12a:	9e b7       	in	r25, 0x3e	; 62
 12c:	08 96       	adiw	r24, 0x08	; 8
 12e:	0f b6       	in	r0, 0x3f	; 63
 130:	f8 94       	cli
 132:	9e bf       	out	0x3e, r25	; 62
 134:	0f be       	out	0x3f, r0	; 63
 136:	8d bf       	out	0x3d, r24	; 61
 138:	10 c0       	rjmp	.+32     	; 0x15a <float_to_string+0xb4>
		} else {
		sprintf(buffer, "%d", integer_part);
 13a:	df 92       	push	r13
 13c:	cf 92       	push	r12
 13e:	87 e0       	ldi	r24, 0x07	; 7
 140:	91 e0       	ldi	r25, 0x01	; 1
 142:	9f 93       	push	r25
 144:	8f 93       	push	r24
 146:	6f 92       	push	r6
 148:	7f 92       	push	r7
 14a:	0e 94 f6 03 	call	0x7ec	; 0x7ec <sprintf>
 14e:	0f 90       	pop	r0
 150:	0f 90       	pop	r0
 152:	0f 90       	pop	r0
 154:	0f 90       	pop	r0
 156:	0f 90       	pop	r0
 158:	0f 90       	pop	r0
	}
}
 15a:	df 91       	pop	r29
 15c:	cf 91       	pop	r28
 15e:	1f 91       	pop	r17
 160:	0f 91       	pop	r16
 162:	ff 90       	pop	r15
 164:	ef 90       	pop	r14
 166:	df 90       	pop	r13
 168:	cf 90       	pop	r12
 16a:	bf 90       	pop	r11
 16c:	af 90       	pop	r10
 16e:	9f 90       	pop	r9
 170:	8f 90       	pop	r8
 172:	7f 90       	pop	r7
 174:	6f 90       	pop	r6
 176:	08 95       	ret

00000178 <setup>:

void setup(void) {
	initUART9600();
 178:	0e 94 a4 01 	call	0x348	; 0x348 <initUART9600>
	DDRB |= (1 << DDB5);
 17c:	84 b1       	in	r24, 0x04	; 4
 17e:	80 62       	ori	r24, 0x20	; 32
 180:	84 b9       	out	0x04, r24	; 4
	PORTB &= ~(1 << PORTB5);
 182:	85 b1       	in	r24, 0x05	; 5
 184:	8f 7d       	andi	r24, 0xDF	; 223
 186:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 188:	2f ef       	ldi	r18, 0xFF	; 255
 18a:	83 ed       	ldi	r24, 0xD3	; 211
 18c:	90 e3       	ldi	r25, 0x30	; 48
 18e:	21 50       	subi	r18, 0x01	; 1
 190:	80 40       	sbci	r24, 0x00	; 0
 192:	90 40       	sbci	r25, 0x00	; 0
 194:	e1 f7       	brne	.-8      	; 0x18e <setup+0x16>
 196:	00 c0       	rjmp	.+0      	; 0x198 <setup+0x20>
 198:	00 00       	nop
	_delay_ms(1000);
	
	writeTextUART("Nano Simulator iniciado\n");
 19a:	8a e0       	ldi	r24, 0x0A	; 10
 19c:	91 e0       	ldi	r25, 0x01	; 1
 19e:	0e 94 c3 01 	call	0x386	; 0x386 <writeTextUART>
 1a2:	08 95       	ret

000001a4 <simularDatosSensores>:
}

void simularDatosSensores(void) {
 1a4:	cf 93       	push	r28
 1a6:	df 93       	push	r29
	peso_simulado = 500.0f + (rand() % 200 - 100);
 1a8:	0e 94 e6 03 	call	0x7cc	; 0x7cc <rand>
 1ac:	68 ec       	ldi	r22, 0xC8	; 200
 1ae:	70 e0       	ldi	r23, 0x00	; 0
 1b0:	0e 94 72 03 	call	0x6e4	; 0x6e4 <__divmodhi4>
 1b4:	bc 01       	movw	r22, r24
 1b6:	64 56       	subi	r22, 0x64	; 100
 1b8:	71 09       	sbc	r23, r1
 1ba:	07 2e       	mov	r0, r23
 1bc:	00 0c       	add	r0, r0
 1be:	88 0b       	sbc	r24, r24
 1c0:	99 0b       	sbc	r25, r25
 1c2:	0e 94 79 02 	call	0x4f2	; 0x4f2 <__floatsisf>
 1c6:	20 e0       	ldi	r18, 0x00	; 0
 1c8:	30 e0       	ldi	r19, 0x00	; 0
 1ca:	4a ef       	ldi	r20, 0xFA	; 250
 1cc:	53 e4       	ldi	r21, 0x43	; 67
 1ce:	0e 94 d5 01 	call	0x3aa	; 0x3aa <__addsf3>
 1d2:	60 93 58 01 	sts	0x0158, r22	; 0x800158 <peso_simulado>
 1d6:	70 93 59 01 	sts	0x0159, r23	; 0x800159 <peso_simulado+0x1>
 1da:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <peso_simulado+0x2>
 1de:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <peso_simulado+0x3>
	distancia_simulada = 50.0f + (rand() % 40 - 20);
 1e2:	0e 94 e6 03 	call	0x7cc	; 0x7cc <rand>
 1e6:	c8 e2       	ldi	r28, 0x28	; 40
 1e8:	d0 e0       	ldi	r29, 0x00	; 0
 1ea:	be 01       	movw	r22, r28
 1ec:	0e 94 72 03 	call	0x6e4	; 0x6e4 <__divmodhi4>
 1f0:	bc 01       	movw	r22, r24
 1f2:	64 51       	subi	r22, 0x14	; 20
 1f4:	71 09       	sbc	r23, r1
 1f6:	07 2e       	mov	r0, r23
 1f8:	00 0c       	add	r0, r0
 1fa:	88 0b       	sbc	r24, r24
 1fc:	99 0b       	sbc	r25, r25
 1fe:	0e 94 79 02 	call	0x4f2	; 0x4f2 <__floatsisf>
 202:	20 e0       	ldi	r18, 0x00	; 0
 204:	30 e0       	ldi	r19, 0x00	; 0
 206:	48 e4       	ldi	r20, 0x48	; 72
 208:	52 e4       	ldi	r21, 0x42	; 66
 20a:	0e 94 d5 01 	call	0x3aa	; 0x3aa <__addsf3>
 20e:	60 93 54 01 	sts	0x0154, r22	; 0x800154 <distancia_simulada>
 212:	70 93 55 01 	sts	0x0155, r23	; 0x800155 <distancia_simulada+0x1>
 216:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <distancia_simulada+0x2>
 21a:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <distancia_simulada+0x3>
	temperatura_simulada = 25.0f + (rand() % 40 - 20) * 0.1f;
 21e:	0e 94 e6 03 	call	0x7cc	; 0x7cc <rand>
 222:	be 01       	movw	r22, r28
 224:	0e 94 72 03 	call	0x6e4	; 0x6e4 <__divmodhi4>
 228:	bc 01       	movw	r22, r24
 22a:	64 51       	subi	r22, 0x14	; 20
 22c:	71 09       	sbc	r23, r1
 22e:	07 2e       	mov	r0, r23
 230:	00 0c       	add	r0, r0
 232:	88 0b       	sbc	r24, r24
 234:	99 0b       	sbc	r25, r25
 236:	0e 94 79 02 	call	0x4f2	; 0x4f2 <__floatsisf>
 23a:	2d ec       	ldi	r18, 0xCD	; 205
 23c:	3c ec       	ldi	r19, 0xCC	; 204
 23e:	4c ec       	ldi	r20, 0xCC	; 204
 240:	5d e3       	ldi	r21, 0x3D	; 61
 242:	0e 94 05 03 	call	0x60a	; 0x60a <__mulsf3>
 246:	20 e0       	ldi	r18, 0x00	; 0
 248:	30 e0       	ldi	r19, 0x00	; 0
 24a:	48 ec       	ldi	r20, 0xC8	; 200
 24c:	51 e4       	ldi	r21, 0x41	; 65
 24e:	0e 94 d5 01 	call	0x3aa	; 0x3aa <__addsf3>
 252:	60 93 50 01 	sts	0x0150, r22	; 0x800150 <__data_end>
 256:	70 93 51 01 	sts	0x0151, r23	; 0x800151 <__data_end+0x1>
 25a:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <__data_end+0x2>
 25e:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <__data_end+0x3>
}
 262:	df 91       	pop	r29
 264:	cf 91       	pop	r28
 266:	08 95       	ret

00000268 <enviarDatosESP32>:

void enviarDatosESP32(void) {
 268:	cf 93       	push	r28
 26a:	df 93       	push	r29
 26c:	cd b7       	in	r28, 0x3d	; 61
 26e:	de b7       	in	r29, 0x3e	; 62
 270:	6e 97       	sbiw	r28, 0x1e	; 30
 272:	0f b6       	in	r0, 0x3f	; 63
 274:	f8 94       	cli
 276:	de bf       	out	0x3e, r29	; 62
 278:	0f be       	out	0x3f, r0	; 63
 27a:	cd bf       	out	0x3d, r28	; 61
	char peso_str[10], dist_str[10], temp_str[10];
	
	// Convertir floats a strings
	float_to_string(peso_simulado, peso_str, 1);
 27c:	60 91 58 01 	lds	r22, 0x0158	; 0x800158 <peso_simulado>
 280:	70 91 59 01 	lds	r23, 0x0159	; 0x800159 <peso_simulado+0x1>
 284:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <peso_simulado+0x2>
 288:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <peso_simulado+0x3>
 28c:	21 e0       	ldi	r18, 0x01	; 1
 28e:	30 e0       	ldi	r19, 0x00	; 0
 290:	ae 01       	movw	r20, r28
 292:	4f 5f       	subi	r20, 0xFF	; 255
 294:	5f 4f       	sbci	r21, 0xFF	; 255
 296:	0e 94 53 00 	call	0xa6	; 0xa6 <float_to_string>
	float_to_string(distancia_simulada, dist_str, 1);
 29a:	60 91 54 01 	lds	r22, 0x0154	; 0x800154 <distancia_simulada>
 29e:	70 91 55 01 	lds	r23, 0x0155	; 0x800155 <distancia_simulada+0x1>
 2a2:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <distancia_simulada+0x2>
 2a6:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <distancia_simulada+0x3>
 2aa:	21 e0       	ldi	r18, 0x01	; 1
 2ac:	30 e0       	ldi	r19, 0x00	; 0
 2ae:	ae 01       	movw	r20, r28
 2b0:	45 5f       	subi	r20, 0xF5	; 245
 2b2:	5f 4f       	sbci	r21, 0xFF	; 255
 2b4:	0e 94 53 00 	call	0xa6	; 0xa6 <float_to_string>
	float_to_string(temperatura_simulada, temp_str, 1);
 2b8:	60 91 50 01 	lds	r22, 0x0150	; 0x800150 <__data_end>
 2bc:	70 91 51 01 	lds	r23, 0x0151	; 0x800151 <__data_end+0x1>
 2c0:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <__data_end+0x2>
 2c4:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <__data_end+0x3>
 2c8:	21 e0       	ldi	r18, 0x01	; 1
 2ca:	30 e0       	ldi	r19, 0x00	; 0
 2cc:	ae 01       	movw	r20, r28
 2ce:	4b 5e       	subi	r20, 0xEB	; 235
 2d0:	5f 4f       	sbci	r21, 0xFF	; 255
 2d2:	0e 94 53 00 	call	0xa6	; 0xa6 <float_to_string>
	
	// Crear JSON manualmente
	writeTextUART("{\"weight_g\": ");
 2d6:	83 e2       	ldi	r24, 0x23	; 35
 2d8:	91 e0       	ldi	r25, 0x01	; 1
 2da:	0e 94 c3 01 	call	0x386	; 0x386 <writeTextUART>
		writeTextUART(peso_str);
 2de:	ce 01       	movw	r24, r28
 2e0:	01 96       	adiw	r24, 0x01	; 1
 2e2:	0e 94 c3 01 	call	0x386	; 0x386 <writeTextUART>
		writeTextUART(", \"dist_cm\": ");
 2e6:	81 e3       	ldi	r24, 0x31	; 49
 2e8:	91 e0       	ldi	r25, 0x01	; 1
 2ea:	0e 94 c3 01 	call	0x386	; 0x386 <writeTextUART>
		writeTextUART(dist_str);
 2ee:	ce 01       	movw	r24, r28
 2f0:	0b 96       	adiw	r24, 0x0b	; 11
 2f2:	0e 94 c3 01 	call	0x386	; 0x386 <writeTextUART>
		writeTextUART(", \"temp_c\": ");
 2f6:	8f e3       	ldi	r24, 0x3F	; 63
 2f8:	91 e0       	ldi	r25, 0x01	; 1
 2fa:	0e 94 c3 01 	call	0x386	; 0x386 <writeTextUART>
		writeTextUART(temp_str);
 2fe:	ce 01       	movw	r24, r28
 300:	45 96       	adiw	r24, 0x15	; 21
 302:	0e 94 c3 01 	call	0x386	; 0x386 <writeTextUART>
	writeTextUART("}\n");
 306:	8c e4       	ldi	r24, 0x4C	; 76
 308:	91 e0       	ldi	r25, 0x01	; 1
 30a:	0e 94 c3 01 	call	0x386	; 0x386 <writeTextUART>
	
	PORTB ^= (1 << PORTB5);
 30e:	95 b1       	in	r25, 0x05	; 5
 310:	80 e2       	ldi	r24, 0x20	; 32
 312:	89 27       	eor	r24, r25
 314:	85 b9       	out	0x05, r24	; 5
}
 316:	6e 96       	adiw	r28, 0x1e	; 30
 318:	0f b6       	in	r0, 0x3f	; 63
 31a:	f8 94       	cli
 31c:	de bf       	out	0x3e, r29	; 62
 31e:	0f be       	out	0x3f, r0	; 63
 320:	cd bf       	out	0x3d, r28	; 61
 322:	df 91       	pop	r29
 324:	cf 91       	pop	r28
 326:	08 95       	ret

00000328 <main>:

int main(void) {
	setup();
 328:	0e 94 bc 00 	call	0x178	; 0x178 <setup>
	
	while (1) {
		simularDatosSensores();
 32c:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <simularDatosSensores>
		enviarDatosESP32();
 330:	0e 94 34 01 	call	0x268	; 0x268 <enviarDatosESP32>
 334:	2f ef       	ldi	r18, 0xFF	; 255
 336:	87 ea       	ldi	r24, 0xA7	; 167
 338:	91 e6       	ldi	r25, 0x61	; 97
 33a:	21 50       	subi	r18, 0x01	; 1
 33c:	80 40       	sbci	r24, 0x00	; 0
 33e:	90 40       	sbci	r25, 0x00	; 0
 340:	e1 f7       	brne	.-8      	; 0x33a <main+0x12>
 342:	00 c0       	rjmp	.+0      	; 0x344 <main+0x1c>
 344:	00 00       	nop
 346:	f2 cf       	rjmp	.-28     	; 0x32c <main+0x4>

00000348 <initUART9600>:
	UBRR0 = 16;
}

void writeUART(char caractrer){
	while(!(UCSR0A &(1<<UDRE0)));		//La funci?n se queda en espera hasta que UDR este en 1
	UDR0 = caractrer;
 348:	8a b1       	in	r24, 0x0a	; 10
 34a:	8e 7f       	andi	r24, 0xFE	; 254
 34c:	8a b9       	out	0x0a, r24	; 10
 34e:	8a b1       	in	r24, 0x0a	; 10
 350:	82 60       	ori	r24, 0x02	; 2
 352:	8a b9       	out	0x0a, r24	; 10
 354:	e0 ec       	ldi	r30, 0xC0	; 192
 356:	f0 e0       	ldi	r31, 0x00	; 0
 358:	10 82       	st	Z, r1
 35a:	80 81       	ld	r24, Z
 35c:	82 60       	ori	r24, 0x02	; 2
 35e:	80 83       	st	Z, r24
 360:	e1 ec       	ldi	r30, 0xC1	; 193
 362:	f0 e0       	ldi	r31, 0x00	; 0
 364:	10 82       	st	Z, r1
 366:	80 81       	ld	r24, Z
 368:	88 69       	ori	r24, 0x98	; 152
 36a:	80 83       	st	Z, r24
 36c:	e2 ec       	ldi	r30, 0xC2	; 194
 36e:	f0 e0       	ldi	r31, 0x00	; 0
 370:	10 82       	st	Z, r1
 372:	80 81       	ld	r24, Z
 374:	86 60       	ori	r24, 0x06	; 6
 376:	80 83       	st	Z, r24
 378:	80 e1       	ldi	r24, 0x10	; 16
 37a:	90 e0       	ldi	r25, 0x00	; 0
 37c:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 380:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
 384:	08 95       	ret

00000386 <writeTextUART>:
}

void writeTextUART(char* texto){			// "*" es un puntero del char
 386:	ac 01       	movw	r20, r24
	uint8_t i;
	for(i = 0; texto[i]!= '\0'; i++){
 388:	20 e0       	ldi	r18, 0x00	; 0
 38a:	07 c0       	rjmp	.+14     	; 0x39a <writeTextUART+0x14>
		while(!(UCSR0A &(1<<UDRE0)));		//La funci?n se queda en espera hasta que UDR este en 1
 38c:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 390:	95 ff       	sbrs	r25, 5
 392:	fc cf       	rjmp	.-8      	; 0x38c <writeTextUART+0x6>
		UDR0 = texto[i];
 394:	30 93 c6 00 	sts	0x00C6, r19	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
	UDR0 = caractrer;
}

void writeTextUART(char* texto){			// "*" es un puntero del char
	uint8_t i;
	for(i = 0; texto[i]!= '\0'; i++){
 398:	2f 5f       	subi	r18, 0xFF	; 255
 39a:	fa 01       	movw	r30, r20
 39c:	e2 0f       	add	r30, r18
 39e:	f1 1d       	adc	r31, r1
 3a0:	30 81       	ld	r19, Z
 3a2:	31 11       	cpse	r19, r1
 3a4:	f3 cf       	rjmp	.-26     	; 0x38c <writeTextUART+0x6>
		while(!(UCSR0A &(1<<UDRE0)));		//La funci?n se queda en espera hasta que UDR este en 1
		UDR0 = texto[i];
	}
}
 3a6:	08 95       	ret

000003a8 <__subsf3>:
 3a8:	50 58       	subi	r21, 0x80	; 128

000003aa <__addsf3>:
 3aa:	bb 27       	eor	r27, r27
 3ac:	aa 27       	eor	r26, r26
 3ae:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <__addsf3x>
 3b2:	0c 94 cb 02 	jmp	0x596	; 0x596 <__fp_round>
 3b6:	0e 94 bd 02 	call	0x57a	; 0x57a <__fp_pscA>
 3ba:	38 f0       	brcs	.+14     	; 0x3ca <__addsf3+0x20>
 3bc:	0e 94 c4 02 	call	0x588	; 0x588 <__fp_pscB>
 3c0:	20 f0       	brcs	.+8      	; 0x3ca <__addsf3+0x20>
 3c2:	39 f4       	brne	.+14     	; 0x3d2 <__addsf3+0x28>
 3c4:	9f 3f       	cpi	r25, 0xFF	; 255
 3c6:	19 f4       	brne	.+6      	; 0x3ce <__addsf3+0x24>
 3c8:	26 f4       	brtc	.+8      	; 0x3d2 <__addsf3+0x28>
 3ca:	0c 94 ba 02 	jmp	0x574	; 0x574 <__fp_nan>
 3ce:	0e f4       	brtc	.+2      	; 0x3d2 <__addsf3+0x28>
 3d0:	e0 95       	com	r30
 3d2:	e7 fb       	bst	r30, 7
 3d4:	0c 94 b4 02 	jmp	0x568	; 0x568 <__fp_inf>

000003d8 <__addsf3x>:
 3d8:	e9 2f       	mov	r30, r25
 3da:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <__fp_split3>
 3de:	58 f3       	brcs	.-42     	; 0x3b6 <__addsf3+0xc>
 3e0:	ba 17       	cp	r27, r26
 3e2:	62 07       	cpc	r22, r18
 3e4:	73 07       	cpc	r23, r19
 3e6:	84 07       	cpc	r24, r20
 3e8:	95 07       	cpc	r25, r21
 3ea:	20 f0       	brcs	.+8      	; 0x3f4 <__addsf3x+0x1c>
 3ec:	79 f4       	brne	.+30     	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
 3ee:	a6 f5       	brtc	.+104    	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
 3f0:	0c 94 fe 02 	jmp	0x5fc	; 0x5fc <__fp_zero>
 3f4:	0e f4       	brtc	.+2      	; 0x3f8 <__addsf3x+0x20>
 3f6:	e0 95       	com	r30
 3f8:	0b 2e       	mov	r0, r27
 3fa:	ba 2f       	mov	r27, r26
 3fc:	a0 2d       	mov	r26, r0
 3fe:	0b 01       	movw	r0, r22
 400:	b9 01       	movw	r22, r18
 402:	90 01       	movw	r18, r0
 404:	0c 01       	movw	r0, r24
 406:	ca 01       	movw	r24, r20
 408:	a0 01       	movw	r20, r0
 40a:	11 24       	eor	r1, r1
 40c:	ff 27       	eor	r31, r31
 40e:	59 1b       	sub	r21, r25
 410:	99 f0       	breq	.+38     	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
 412:	59 3f       	cpi	r21, 0xF9	; 249
 414:	50 f4       	brcc	.+20     	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
 416:	50 3e       	cpi	r21, 0xE0	; 224
 418:	68 f1       	brcs	.+90     	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
 41a:	1a 16       	cp	r1, r26
 41c:	f0 40       	sbci	r31, 0x00	; 0
 41e:	a2 2f       	mov	r26, r18
 420:	23 2f       	mov	r18, r19
 422:	34 2f       	mov	r19, r20
 424:	44 27       	eor	r20, r20
 426:	58 5f       	subi	r21, 0xF8	; 248
 428:	f3 cf       	rjmp	.-26     	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 42a:	46 95       	lsr	r20
 42c:	37 95       	ror	r19
 42e:	27 95       	ror	r18
 430:	a7 95       	ror	r26
 432:	f0 40       	sbci	r31, 0x00	; 0
 434:	53 95       	inc	r21
 436:	c9 f7       	brne	.-14     	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
 438:	7e f4       	brtc	.+30     	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
 43a:	1f 16       	cp	r1, r31
 43c:	ba 0b       	sbc	r27, r26
 43e:	62 0b       	sbc	r22, r18
 440:	73 0b       	sbc	r23, r19
 442:	84 0b       	sbc	r24, r20
 444:	ba f0       	brmi	.+46     	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
 446:	91 50       	subi	r25, 0x01	; 1
 448:	a1 f0       	breq	.+40     	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
 44a:	ff 0f       	add	r31, r31
 44c:	bb 1f       	adc	r27, r27
 44e:	66 1f       	adc	r22, r22
 450:	77 1f       	adc	r23, r23
 452:	88 1f       	adc	r24, r24
 454:	c2 f7       	brpl	.-16     	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
 456:	0e c0       	rjmp	.+28     	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
 458:	ba 0f       	add	r27, r26
 45a:	62 1f       	adc	r22, r18
 45c:	73 1f       	adc	r23, r19
 45e:	84 1f       	adc	r24, r20
 460:	48 f4       	brcc	.+18     	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
 462:	87 95       	ror	r24
 464:	77 95       	ror	r23
 466:	67 95       	ror	r22
 468:	b7 95       	ror	r27
 46a:	f7 95       	ror	r31
 46c:	9e 3f       	cpi	r25, 0xFE	; 254
 46e:	08 f0       	brcs	.+2      	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
 470:	b0 cf       	rjmp	.-160    	; 0x3d2 <__addsf3+0x28>
 472:	93 95       	inc	r25
 474:	88 0f       	add	r24, r24
 476:	08 f0       	brcs	.+2      	; 0x47a <__EEPROM_REGION_LENGTH__+0x7a>
 478:	99 27       	eor	r25, r25
 47a:	ee 0f       	add	r30, r30
 47c:	97 95       	ror	r25
 47e:	87 95       	ror	r24
 480:	08 95       	ret

00000482 <__fixsfsi>:
 482:	0e 94 48 02 	call	0x490	; 0x490 <__fixunssfsi>
 486:	68 94       	set
 488:	b1 11       	cpse	r27, r1
 48a:	0c 94 ff 02 	jmp	0x5fe	; 0x5fe <__fp_szero>
 48e:	08 95       	ret

00000490 <__fixunssfsi>:
 490:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <__fp_splitA>
 494:	88 f0       	brcs	.+34     	; 0x4b8 <__fixunssfsi+0x28>
 496:	9f 57       	subi	r25, 0x7F	; 127
 498:	98 f0       	brcs	.+38     	; 0x4c0 <__fixunssfsi+0x30>
 49a:	b9 2f       	mov	r27, r25
 49c:	99 27       	eor	r25, r25
 49e:	b7 51       	subi	r27, 0x17	; 23
 4a0:	b0 f0       	brcs	.+44     	; 0x4ce <__fixunssfsi+0x3e>
 4a2:	e1 f0       	breq	.+56     	; 0x4dc <__fixunssfsi+0x4c>
 4a4:	66 0f       	add	r22, r22
 4a6:	77 1f       	adc	r23, r23
 4a8:	88 1f       	adc	r24, r24
 4aa:	99 1f       	adc	r25, r25
 4ac:	1a f0       	brmi	.+6      	; 0x4b4 <__fixunssfsi+0x24>
 4ae:	ba 95       	dec	r27
 4b0:	c9 f7       	brne	.-14     	; 0x4a4 <__fixunssfsi+0x14>
 4b2:	14 c0       	rjmp	.+40     	; 0x4dc <__fixunssfsi+0x4c>
 4b4:	b1 30       	cpi	r27, 0x01	; 1
 4b6:	91 f0       	breq	.+36     	; 0x4dc <__fixunssfsi+0x4c>
 4b8:	0e 94 fe 02 	call	0x5fc	; 0x5fc <__fp_zero>
 4bc:	b1 e0       	ldi	r27, 0x01	; 1
 4be:	08 95       	ret
 4c0:	0c 94 fe 02 	jmp	0x5fc	; 0x5fc <__fp_zero>
 4c4:	67 2f       	mov	r22, r23
 4c6:	78 2f       	mov	r23, r24
 4c8:	88 27       	eor	r24, r24
 4ca:	b8 5f       	subi	r27, 0xF8	; 248
 4cc:	39 f0       	breq	.+14     	; 0x4dc <__fixunssfsi+0x4c>
 4ce:	b9 3f       	cpi	r27, 0xF9	; 249
 4d0:	cc f3       	brlt	.-14     	; 0x4c4 <__fixunssfsi+0x34>
 4d2:	86 95       	lsr	r24
 4d4:	77 95       	ror	r23
 4d6:	67 95       	ror	r22
 4d8:	b3 95       	inc	r27
 4da:	d9 f7       	brne	.-10     	; 0x4d2 <__fixunssfsi+0x42>
 4dc:	3e f4       	brtc	.+14     	; 0x4ec <__fixunssfsi+0x5c>
 4de:	90 95       	com	r25
 4e0:	80 95       	com	r24
 4e2:	70 95       	com	r23
 4e4:	61 95       	neg	r22
 4e6:	7f 4f       	sbci	r23, 0xFF	; 255
 4e8:	8f 4f       	sbci	r24, 0xFF	; 255
 4ea:	9f 4f       	sbci	r25, 0xFF	; 255
 4ec:	08 95       	ret

000004ee <__floatunsisf>:
 4ee:	e8 94       	clt
 4f0:	09 c0       	rjmp	.+18     	; 0x504 <__floatsisf+0x12>

000004f2 <__floatsisf>:
 4f2:	97 fb       	bst	r25, 7
 4f4:	3e f4       	brtc	.+14     	; 0x504 <__floatsisf+0x12>
 4f6:	90 95       	com	r25
 4f8:	80 95       	com	r24
 4fa:	70 95       	com	r23
 4fc:	61 95       	neg	r22
 4fe:	7f 4f       	sbci	r23, 0xFF	; 255
 500:	8f 4f       	sbci	r24, 0xFF	; 255
 502:	9f 4f       	sbci	r25, 0xFF	; 255
 504:	99 23       	and	r25, r25
 506:	a9 f0       	breq	.+42     	; 0x532 <__floatsisf+0x40>
 508:	f9 2f       	mov	r31, r25
 50a:	96 e9       	ldi	r25, 0x96	; 150
 50c:	bb 27       	eor	r27, r27
 50e:	93 95       	inc	r25
 510:	f6 95       	lsr	r31
 512:	87 95       	ror	r24
 514:	77 95       	ror	r23
 516:	67 95       	ror	r22
 518:	b7 95       	ror	r27
 51a:	f1 11       	cpse	r31, r1
 51c:	f8 cf       	rjmp	.-16     	; 0x50e <__floatsisf+0x1c>
 51e:	fa f4       	brpl	.+62     	; 0x55e <__floatsisf+0x6c>
 520:	bb 0f       	add	r27, r27
 522:	11 f4       	brne	.+4      	; 0x528 <__floatsisf+0x36>
 524:	60 ff       	sbrs	r22, 0
 526:	1b c0       	rjmp	.+54     	; 0x55e <__floatsisf+0x6c>
 528:	6f 5f       	subi	r22, 0xFF	; 255
 52a:	7f 4f       	sbci	r23, 0xFF	; 255
 52c:	8f 4f       	sbci	r24, 0xFF	; 255
 52e:	9f 4f       	sbci	r25, 0xFF	; 255
 530:	16 c0       	rjmp	.+44     	; 0x55e <__floatsisf+0x6c>
 532:	88 23       	and	r24, r24
 534:	11 f0       	breq	.+4      	; 0x53a <__floatsisf+0x48>
 536:	96 e9       	ldi	r25, 0x96	; 150
 538:	11 c0       	rjmp	.+34     	; 0x55c <__floatsisf+0x6a>
 53a:	77 23       	and	r23, r23
 53c:	21 f0       	breq	.+8      	; 0x546 <__floatsisf+0x54>
 53e:	9e e8       	ldi	r25, 0x8E	; 142
 540:	87 2f       	mov	r24, r23
 542:	76 2f       	mov	r23, r22
 544:	05 c0       	rjmp	.+10     	; 0x550 <__floatsisf+0x5e>
 546:	66 23       	and	r22, r22
 548:	71 f0       	breq	.+28     	; 0x566 <__floatsisf+0x74>
 54a:	96 e8       	ldi	r25, 0x86	; 134
 54c:	86 2f       	mov	r24, r22
 54e:	70 e0       	ldi	r23, 0x00	; 0
 550:	60 e0       	ldi	r22, 0x00	; 0
 552:	2a f0       	brmi	.+10     	; 0x55e <__floatsisf+0x6c>
 554:	9a 95       	dec	r25
 556:	66 0f       	add	r22, r22
 558:	77 1f       	adc	r23, r23
 55a:	88 1f       	adc	r24, r24
 55c:	da f7       	brpl	.-10     	; 0x554 <__floatsisf+0x62>
 55e:	88 0f       	add	r24, r24
 560:	96 95       	lsr	r25
 562:	87 95       	ror	r24
 564:	97 f9       	bld	r25, 7
 566:	08 95       	ret

00000568 <__fp_inf>:
 568:	97 f9       	bld	r25, 7
 56a:	9f 67       	ori	r25, 0x7F	; 127
 56c:	80 e8       	ldi	r24, 0x80	; 128
 56e:	70 e0       	ldi	r23, 0x00	; 0
 570:	60 e0       	ldi	r22, 0x00	; 0
 572:	08 95       	ret

00000574 <__fp_nan>:
 574:	9f ef       	ldi	r25, 0xFF	; 255
 576:	80 ec       	ldi	r24, 0xC0	; 192
 578:	08 95       	ret

0000057a <__fp_pscA>:
 57a:	00 24       	eor	r0, r0
 57c:	0a 94       	dec	r0
 57e:	16 16       	cp	r1, r22
 580:	17 06       	cpc	r1, r23
 582:	18 06       	cpc	r1, r24
 584:	09 06       	cpc	r0, r25
 586:	08 95       	ret

00000588 <__fp_pscB>:
 588:	00 24       	eor	r0, r0
 58a:	0a 94       	dec	r0
 58c:	12 16       	cp	r1, r18
 58e:	13 06       	cpc	r1, r19
 590:	14 06       	cpc	r1, r20
 592:	05 06       	cpc	r0, r21
 594:	08 95       	ret

00000596 <__fp_round>:
 596:	09 2e       	mov	r0, r25
 598:	03 94       	inc	r0
 59a:	00 0c       	add	r0, r0
 59c:	11 f4       	brne	.+4      	; 0x5a2 <__fp_round+0xc>
 59e:	88 23       	and	r24, r24
 5a0:	52 f0       	brmi	.+20     	; 0x5b6 <__fp_round+0x20>
 5a2:	bb 0f       	add	r27, r27
 5a4:	40 f4       	brcc	.+16     	; 0x5b6 <__fp_round+0x20>
 5a6:	bf 2b       	or	r27, r31
 5a8:	11 f4       	brne	.+4      	; 0x5ae <__fp_round+0x18>
 5aa:	60 ff       	sbrs	r22, 0
 5ac:	04 c0       	rjmp	.+8      	; 0x5b6 <__fp_round+0x20>
 5ae:	6f 5f       	subi	r22, 0xFF	; 255
 5b0:	7f 4f       	sbci	r23, 0xFF	; 255
 5b2:	8f 4f       	sbci	r24, 0xFF	; 255
 5b4:	9f 4f       	sbci	r25, 0xFF	; 255
 5b6:	08 95       	ret

000005b8 <__fp_split3>:
 5b8:	57 fd       	sbrc	r21, 7
 5ba:	90 58       	subi	r25, 0x80	; 128
 5bc:	44 0f       	add	r20, r20
 5be:	55 1f       	adc	r21, r21
 5c0:	59 f0       	breq	.+22     	; 0x5d8 <__fp_splitA+0x10>
 5c2:	5f 3f       	cpi	r21, 0xFF	; 255
 5c4:	71 f0       	breq	.+28     	; 0x5e2 <__fp_splitA+0x1a>
 5c6:	47 95       	ror	r20

000005c8 <__fp_splitA>:
 5c8:	88 0f       	add	r24, r24
 5ca:	97 fb       	bst	r25, 7
 5cc:	99 1f       	adc	r25, r25
 5ce:	61 f0       	breq	.+24     	; 0x5e8 <__fp_splitA+0x20>
 5d0:	9f 3f       	cpi	r25, 0xFF	; 255
 5d2:	79 f0       	breq	.+30     	; 0x5f2 <__fp_splitA+0x2a>
 5d4:	87 95       	ror	r24
 5d6:	08 95       	ret
 5d8:	12 16       	cp	r1, r18
 5da:	13 06       	cpc	r1, r19
 5dc:	14 06       	cpc	r1, r20
 5de:	55 1f       	adc	r21, r21
 5e0:	f2 cf       	rjmp	.-28     	; 0x5c6 <__fp_split3+0xe>
 5e2:	46 95       	lsr	r20
 5e4:	f1 df       	rcall	.-30     	; 0x5c8 <__fp_splitA>
 5e6:	08 c0       	rjmp	.+16     	; 0x5f8 <__fp_splitA+0x30>
 5e8:	16 16       	cp	r1, r22
 5ea:	17 06       	cpc	r1, r23
 5ec:	18 06       	cpc	r1, r24
 5ee:	99 1f       	adc	r25, r25
 5f0:	f1 cf       	rjmp	.-30     	; 0x5d4 <__fp_splitA+0xc>
 5f2:	86 95       	lsr	r24
 5f4:	71 05       	cpc	r23, r1
 5f6:	61 05       	cpc	r22, r1
 5f8:	08 94       	sec
 5fa:	08 95       	ret

000005fc <__fp_zero>:
 5fc:	e8 94       	clt

000005fe <__fp_szero>:
 5fe:	bb 27       	eor	r27, r27
 600:	66 27       	eor	r22, r22
 602:	77 27       	eor	r23, r23
 604:	cb 01       	movw	r24, r22
 606:	97 f9       	bld	r25, 7
 608:	08 95       	ret

0000060a <__mulsf3>:
 60a:	0e 94 18 03 	call	0x630	; 0x630 <__mulsf3x>
 60e:	0c 94 cb 02 	jmp	0x596	; 0x596 <__fp_round>
 612:	0e 94 bd 02 	call	0x57a	; 0x57a <__fp_pscA>
 616:	38 f0       	brcs	.+14     	; 0x626 <__mulsf3+0x1c>
 618:	0e 94 c4 02 	call	0x588	; 0x588 <__fp_pscB>
 61c:	20 f0       	brcs	.+8      	; 0x626 <__mulsf3+0x1c>
 61e:	95 23       	and	r25, r21
 620:	11 f0       	breq	.+4      	; 0x626 <__mulsf3+0x1c>
 622:	0c 94 b4 02 	jmp	0x568	; 0x568 <__fp_inf>
 626:	0c 94 ba 02 	jmp	0x574	; 0x574 <__fp_nan>
 62a:	11 24       	eor	r1, r1
 62c:	0c 94 ff 02 	jmp	0x5fe	; 0x5fe <__fp_szero>

00000630 <__mulsf3x>:
 630:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <__fp_split3>
 634:	70 f3       	brcs	.-36     	; 0x612 <__mulsf3+0x8>

00000636 <__mulsf3_pse>:
 636:	95 9f       	mul	r25, r21
 638:	c1 f3       	breq	.-16     	; 0x62a <__mulsf3+0x20>
 63a:	95 0f       	add	r25, r21
 63c:	50 e0       	ldi	r21, 0x00	; 0
 63e:	55 1f       	adc	r21, r21
 640:	62 9f       	mul	r22, r18
 642:	f0 01       	movw	r30, r0
 644:	72 9f       	mul	r23, r18
 646:	bb 27       	eor	r27, r27
 648:	f0 0d       	add	r31, r0
 64a:	b1 1d       	adc	r27, r1
 64c:	63 9f       	mul	r22, r19
 64e:	aa 27       	eor	r26, r26
 650:	f0 0d       	add	r31, r0
 652:	b1 1d       	adc	r27, r1
 654:	aa 1f       	adc	r26, r26
 656:	64 9f       	mul	r22, r20
 658:	66 27       	eor	r22, r22
 65a:	b0 0d       	add	r27, r0
 65c:	a1 1d       	adc	r26, r1
 65e:	66 1f       	adc	r22, r22
 660:	82 9f       	mul	r24, r18
 662:	22 27       	eor	r18, r18
 664:	b0 0d       	add	r27, r0
 666:	a1 1d       	adc	r26, r1
 668:	62 1f       	adc	r22, r18
 66a:	73 9f       	mul	r23, r19
 66c:	b0 0d       	add	r27, r0
 66e:	a1 1d       	adc	r26, r1
 670:	62 1f       	adc	r22, r18
 672:	83 9f       	mul	r24, r19
 674:	a0 0d       	add	r26, r0
 676:	61 1d       	adc	r22, r1
 678:	22 1f       	adc	r18, r18
 67a:	74 9f       	mul	r23, r20
 67c:	33 27       	eor	r19, r19
 67e:	a0 0d       	add	r26, r0
 680:	61 1d       	adc	r22, r1
 682:	23 1f       	adc	r18, r19
 684:	84 9f       	mul	r24, r20
 686:	60 0d       	add	r22, r0
 688:	21 1d       	adc	r18, r1
 68a:	82 2f       	mov	r24, r18
 68c:	76 2f       	mov	r23, r22
 68e:	6a 2f       	mov	r22, r26
 690:	11 24       	eor	r1, r1
 692:	9f 57       	subi	r25, 0x7F	; 127
 694:	50 40       	sbci	r21, 0x00	; 0
 696:	9a f0       	brmi	.+38     	; 0x6be <__mulsf3_pse+0x88>
 698:	f1 f0       	breq	.+60     	; 0x6d6 <__mulsf3_pse+0xa0>
 69a:	88 23       	and	r24, r24
 69c:	4a f0       	brmi	.+18     	; 0x6b0 <__mulsf3_pse+0x7a>
 69e:	ee 0f       	add	r30, r30
 6a0:	ff 1f       	adc	r31, r31
 6a2:	bb 1f       	adc	r27, r27
 6a4:	66 1f       	adc	r22, r22
 6a6:	77 1f       	adc	r23, r23
 6a8:	88 1f       	adc	r24, r24
 6aa:	91 50       	subi	r25, 0x01	; 1
 6ac:	50 40       	sbci	r21, 0x00	; 0
 6ae:	a9 f7       	brne	.-22     	; 0x69a <__mulsf3_pse+0x64>
 6b0:	9e 3f       	cpi	r25, 0xFE	; 254
 6b2:	51 05       	cpc	r21, r1
 6b4:	80 f0       	brcs	.+32     	; 0x6d6 <__mulsf3_pse+0xa0>
 6b6:	0c 94 b4 02 	jmp	0x568	; 0x568 <__fp_inf>
 6ba:	0c 94 ff 02 	jmp	0x5fe	; 0x5fe <__fp_szero>
 6be:	5f 3f       	cpi	r21, 0xFF	; 255
 6c0:	e4 f3       	brlt	.-8      	; 0x6ba <__mulsf3_pse+0x84>
 6c2:	98 3e       	cpi	r25, 0xE8	; 232
 6c4:	d4 f3       	brlt	.-12     	; 0x6ba <__mulsf3_pse+0x84>
 6c6:	86 95       	lsr	r24
 6c8:	77 95       	ror	r23
 6ca:	67 95       	ror	r22
 6cc:	b7 95       	ror	r27
 6ce:	f7 95       	ror	r31
 6d0:	e7 95       	ror	r30
 6d2:	9f 5f       	subi	r25, 0xFF	; 255
 6d4:	c1 f7       	brne	.-16     	; 0x6c6 <__mulsf3_pse+0x90>
 6d6:	fe 2b       	or	r31, r30
 6d8:	88 0f       	add	r24, r24
 6da:	91 1d       	adc	r25, r1
 6dc:	96 95       	lsr	r25
 6de:	87 95       	ror	r24
 6e0:	97 f9       	bld	r25, 7
 6e2:	08 95       	ret

000006e4 <__divmodhi4>:
 6e4:	97 fb       	bst	r25, 7
 6e6:	07 2e       	mov	r0, r23
 6e8:	16 f4       	brtc	.+4      	; 0x6ee <__divmodhi4+0xa>
 6ea:	00 94       	com	r0
 6ec:	07 d0       	rcall	.+14     	; 0x6fc <__divmodhi4_neg1>
 6ee:	77 fd       	sbrc	r23, 7
 6f0:	09 d0       	rcall	.+18     	; 0x704 <__divmodhi4_neg2>
 6f2:	0e 94 86 03 	call	0x70c	; 0x70c <__udivmodhi4>
 6f6:	07 fc       	sbrc	r0, 7
 6f8:	05 d0       	rcall	.+10     	; 0x704 <__divmodhi4_neg2>
 6fa:	3e f4       	brtc	.+14     	; 0x70a <__divmodhi4_exit>

000006fc <__divmodhi4_neg1>:
 6fc:	90 95       	com	r25
 6fe:	81 95       	neg	r24
 700:	9f 4f       	sbci	r25, 0xFF	; 255
 702:	08 95       	ret

00000704 <__divmodhi4_neg2>:
 704:	70 95       	com	r23
 706:	61 95       	neg	r22
 708:	7f 4f       	sbci	r23, 0xFF	; 255

0000070a <__divmodhi4_exit>:
 70a:	08 95       	ret

0000070c <__udivmodhi4>:
 70c:	aa 1b       	sub	r26, r26
 70e:	bb 1b       	sub	r27, r27
 710:	51 e1       	ldi	r21, 0x11	; 17
 712:	07 c0       	rjmp	.+14     	; 0x722 <__udivmodhi4_ep>

00000714 <__udivmodhi4_loop>:
 714:	aa 1f       	adc	r26, r26
 716:	bb 1f       	adc	r27, r27
 718:	a6 17       	cp	r26, r22
 71a:	b7 07       	cpc	r27, r23
 71c:	10 f0       	brcs	.+4      	; 0x722 <__udivmodhi4_ep>
 71e:	a6 1b       	sub	r26, r22
 720:	b7 0b       	sbc	r27, r23

00000722 <__udivmodhi4_ep>:
 722:	88 1f       	adc	r24, r24
 724:	99 1f       	adc	r25, r25
 726:	5a 95       	dec	r21
 728:	a9 f7       	brne	.-22     	; 0x714 <__udivmodhi4_loop>
 72a:	80 95       	com	r24
 72c:	90 95       	com	r25
 72e:	bc 01       	movw	r22, r24
 730:	cd 01       	movw	r24, r26
 732:	08 95       	ret

00000734 <do_rand>:
 734:	8f 92       	push	r8
 736:	9f 92       	push	r9
 738:	af 92       	push	r10
 73a:	bf 92       	push	r11
 73c:	cf 92       	push	r12
 73e:	df 92       	push	r13
 740:	ef 92       	push	r14
 742:	ff 92       	push	r15
 744:	cf 93       	push	r28
 746:	df 93       	push	r29
 748:	ec 01       	movw	r28, r24
 74a:	68 81       	ld	r22, Y
 74c:	79 81       	ldd	r23, Y+1	; 0x01
 74e:	8a 81       	ldd	r24, Y+2	; 0x02
 750:	9b 81       	ldd	r25, Y+3	; 0x03
 752:	61 15       	cp	r22, r1
 754:	71 05       	cpc	r23, r1
 756:	81 05       	cpc	r24, r1
 758:	91 05       	cpc	r25, r1
 75a:	21 f4       	brne	.+8      	; 0x764 <do_rand+0x30>
 75c:	64 e2       	ldi	r22, 0x24	; 36
 75e:	79 ed       	ldi	r23, 0xD9	; 217
 760:	8b e5       	ldi	r24, 0x5B	; 91
 762:	97 e0       	ldi	r25, 0x07	; 7
 764:	2d e1       	ldi	r18, 0x1D	; 29
 766:	33 ef       	ldi	r19, 0xF3	; 243
 768:	41 e0       	ldi	r20, 0x01	; 1
 76a:	50 e0       	ldi	r21, 0x00	; 0
 76c:	0e 94 a9 06 	call	0xd52	; 0xd52 <__divmodsi4>
 770:	49 01       	movw	r8, r18
 772:	5a 01       	movw	r10, r20
 774:	9b 01       	movw	r18, r22
 776:	ac 01       	movw	r20, r24
 778:	a7 ea       	ldi	r26, 0xA7	; 167
 77a:	b1 e4       	ldi	r27, 0x41	; 65
 77c:	0e 94 c8 06 	call	0xd90	; 0xd90 <__muluhisi3>
 780:	6b 01       	movw	r12, r22
 782:	7c 01       	movw	r14, r24
 784:	ac ee       	ldi	r26, 0xEC	; 236
 786:	b4 ef       	ldi	r27, 0xF4	; 244
 788:	a5 01       	movw	r20, r10
 78a:	94 01       	movw	r18, r8
 78c:	0e 94 d6 06 	call	0xdac	; 0xdac <__mulohisi3>
 790:	dc 01       	movw	r26, r24
 792:	cb 01       	movw	r24, r22
 794:	8c 0d       	add	r24, r12
 796:	9d 1d       	adc	r25, r13
 798:	ae 1d       	adc	r26, r14
 79a:	bf 1d       	adc	r27, r15
 79c:	b7 ff       	sbrs	r27, 7
 79e:	03 c0       	rjmp	.+6      	; 0x7a6 <do_rand+0x72>
 7a0:	01 97       	sbiw	r24, 0x01	; 1
 7a2:	a1 09       	sbc	r26, r1
 7a4:	b0 48       	sbci	r27, 0x80	; 128
 7a6:	88 83       	st	Y, r24
 7a8:	99 83       	std	Y+1, r25	; 0x01
 7aa:	aa 83       	std	Y+2, r26	; 0x02
 7ac:	bb 83       	std	Y+3, r27	; 0x03
 7ae:	9f 77       	andi	r25, 0x7F	; 127
 7b0:	df 91       	pop	r29
 7b2:	cf 91       	pop	r28
 7b4:	ff 90       	pop	r15
 7b6:	ef 90       	pop	r14
 7b8:	df 90       	pop	r13
 7ba:	cf 90       	pop	r12
 7bc:	bf 90       	pop	r11
 7be:	af 90       	pop	r10
 7c0:	9f 90       	pop	r9
 7c2:	8f 90       	pop	r8
 7c4:	08 95       	ret

000007c6 <rand_r>:
 7c6:	0e 94 9a 03 	call	0x734	; 0x734 <do_rand>
 7ca:	08 95       	ret

000007cc <rand>:
 7cc:	80 e0       	ldi	r24, 0x00	; 0
 7ce:	91 e0       	ldi	r25, 0x01	; 1
 7d0:	0e 94 9a 03 	call	0x734	; 0x734 <do_rand>
 7d4:	08 95       	ret

000007d6 <srand>:
 7d6:	a0 e0       	ldi	r26, 0x00	; 0
 7d8:	b0 e0       	ldi	r27, 0x00	; 0
 7da:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 7de:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 7e2:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 7e6:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 7ea:	08 95       	ret

000007ec <sprintf>:
 7ec:	ae e0       	ldi	r26, 0x0E	; 14
 7ee:	b0 e0       	ldi	r27, 0x00	; 0
 7f0:	ec ef       	ldi	r30, 0xFC	; 252
 7f2:	f3 e0       	ldi	r31, 0x03	; 3
 7f4:	0c 94 e9 06 	jmp	0xdd2	; 0xdd2 <__prologue_saves__+0x1c>
 7f8:	0d 89       	ldd	r16, Y+21	; 0x15
 7fa:	1e 89       	ldd	r17, Y+22	; 0x16
 7fc:	86 e0       	ldi	r24, 0x06	; 6
 7fe:	8c 83       	std	Y+4, r24	; 0x04
 800:	1a 83       	std	Y+2, r17	; 0x02
 802:	09 83       	std	Y+1, r16	; 0x01
 804:	8f ef       	ldi	r24, 0xFF	; 255
 806:	9f e7       	ldi	r25, 0x7F	; 127
 808:	9e 83       	std	Y+6, r25	; 0x06
 80a:	8d 83       	std	Y+5, r24	; 0x05
 80c:	ae 01       	movw	r20, r28
 80e:	47 5e       	subi	r20, 0xE7	; 231
 810:	5f 4f       	sbci	r21, 0xFF	; 255
 812:	6f 89       	ldd	r22, Y+23	; 0x17
 814:	78 8d       	ldd	r23, Y+24	; 0x18
 816:	ce 01       	movw	r24, r28
 818:	01 96       	adiw	r24, 0x01	; 1
 81a:	0e 94 18 04 	call	0x830	; 0x830 <vfprintf>
 81e:	ef 81       	ldd	r30, Y+7	; 0x07
 820:	f8 85       	ldd	r31, Y+8	; 0x08
 822:	e0 0f       	add	r30, r16
 824:	f1 1f       	adc	r31, r17
 826:	10 82       	st	Z, r1
 828:	2e 96       	adiw	r28, 0x0e	; 14
 82a:	e4 e0       	ldi	r30, 0x04	; 4
 82c:	0c 94 05 07 	jmp	0xe0a	; 0xe0a <__epilogue_restores__+0x1c>

00000830 <vfprintf>:
 830:	ab e0       	ldi	r26, 0x0B	; 11
 832:	b0 e0       	ldi	r27, 0x00	; 0
 834:	ee e1       	ldi	r30, 0x1E	; 30
 836:	f4 e0       	ldi	r31, 0x04	; 4
 838:	0c 94 db 06 	jmp	0xdb6	; 0xdb6 <__prologue_saves__>
 83c:	6c 01       	movw	r12, r24
 83e:	7b 01       	movw	r14, r22
 840:	8a 01       	movw	r16, r20
 842:	fc 01       	movw	r30, r24
 844:	17 82       	std	Z+7, r1	; 0x07
 846:	16 82       	std	Z+6, r1	; 0x06
 848:	83 81       	ldd	r24, Z+3	; 0x03
 84a:	81 ff       	sbrs	r24, 1
 84c:	cc c1       	rjmp	.+920    	; 0xbe6 <__stack+0x2e7>
 84e:	ce 01       	movw	r24, r28
 850:	01 96       	adiw	r24, 0x01	; 1
 852:	3c 01       	movw	r6, r24
 854:	f6 01       	movw	r30, r12
 856:	93 81       	ldd	r25, Z+3	; 0x03
 858:	f7 01       	movw	r30, r14
 85a:	93 fd       	sbrc	r25, 3
 85c:	85 91       	lpm	r24, Z+
 85e:	93 ff       	sbrs	r25, 3
 860:	81 91       	ld	r24, Z+
 862:	7f 01       	movw	r14, r30
 864:	88 23       	and	r24, r24
 866:	09 f4       	brne	.+2      	; 0x86a <vfprintf+0x3a>
 868:	ba c1       	rjmp	.+884    	; 0xbde <__stack+0x2df>
 86a:	85 32       	cpi	r24, 0x25	; 37
 86c:	39 f4       	brne	.+14     	; 0x87c <vfprintf+0x4c>
 86e:	93 fd       	sbrc	r25, 3
 870:	85 91       	lpm	r24, Z+
 872:	93 ff       	sbrs	r25, 3
 874:	81 91       	ld	r24, Z+
 876:	7f 01       	movw	r14, r30
 878:	85 32       	cpi	r24, 0x25	; 37
 87a:	29 f4       	brne	.+10     	; 0x886 <vfprintf+0x56>
 87c:	b6 01       	movw	r22, r12
 87e:	90 e0       	ldi	r25, 0x00	; 0
 880:	0e 94 0f 06 	call	0xc1e	; 0xc1e <fputc>
 884:	e7 cf       	rjmp	.-50     	; 0x854 <vfprintf+0x24>
 886:	91 2c       	mov	r9, r1
 888:	21 2c       	mov	r2, r1
 88a:	31 2c       	mov	r3, r1
 88c:	ff e1       	ldi	r31, 0x1F	; 31
 88e:	f3 15       	cp	r31, r3
 890:	d8 f0       	brcs	.+54     	; 0x8c8 <vfprintf+0x98>
 892:	8b 32       	cpi	r24, 0x2B	; 43
 894:	79 f0       	breq	.+30     	; 0x8b4 <vfprintf+0x84>
 896:	38 f4       	brcc	.+14     	; 0x8a6 <vfprintf+0x76>
 898:	80 32       	cpi	r24, 0x20	; 32
 89a:	79 f0       	breq	.+30     	; 0x8ba <vfprintf+0x8a>
 89c:	83 32       	cpi	r24, 0x23	; 35
 89e:	a1 f4       	brne	.+40     	; 0x8c8 <vfprintf+0x98>
 8a0:	23 2d       	mov	r18, r3
 8a2:	20 61       	ori	r18, 0x10	; 16
 8a4:	1d c0       	rjmp	.+58     	; 0x8e0 <vfprintf+0xb0>
 8a6:	8d 32       	cpi	r24, 0x2D	; 45
 8a8:	61 f0       	breq	.+24     	; 0x8c2 <vfprintf+0x92>
 8aa:	80 33       	cpi	r24, 0x30	; 48
 8ac:	69 f4       	brne	.+26     	; 0x8c8 <vfprintf+0x98>
 8ae:	23 2d       	mov	r18, r3
 8b0:	21 60       	ori	r18, 0x01	; 1
 8b2:	16 c0       	rjmp	.+44     	; 0x8e0 <vfprintf+0xb0>
 8b4:	83 2d       	mov	r24, r3
 8b6:	82 60       	ori	r24, 0x02	; 2
 8b8:	38 2e       	mov	r3, r24
 8ba:	e3 2d       	mov	r30, r3
 8bc:	e4 60       	ori	r30, 0x04	; 4
 8be:	3e 2e       	mov	r3, r30
 8c0:	2a c0       	rjmp	.+84     	; 0x916 <__stack+0x17>
 8c2:	f3 2d       	mov	r31, r3
 8c4:	f8 60       	ori	r31, 0x08	; 8
 8c6:	1d c0       	rjmp	.+58     	; 0x902 <__stack+0x3>
 8c8:	37 fc       	sbrc	r3, 7
 8ca:	2d c0       	rjmp	.+90     	; 0x926 <__stack+0x27>
 8cc:	20 ed       	ldi	r18, 0xD0	; 208
 8ce:	28 0f       	add	r18, r24
 8d0:	2a 30       	cpi	r18, 0x0A	; 10
 8d2:	40 f0       	brcs	.+16     	; 0x8e4 <vfprintf+0xb4>
 8d4:	8e 32       	cpi	r24, 0x2E	; 46
 8d6:	b9 f4       	brne	.+46     	; 0x906 <__stack+0x7>
 8d8:	36 fc       	sbrc	r3, 6
 8da:	81 c1       	rjmp	.+770    	; 0xbde <__stack+0x2df>
 8dc:	23 2d       	mov	r18, r3
 8de:	20 64       	ori	r18, 0x40	; 64
 8e0:	32 2e       	mov	r3, r18
 8e2:	19 c0       	rjmp	.+50     	; 0x916 <__stack+0x17>
 8e4:	36 fe       	sbrs	r3, 6
 8e6:	06 c0       	rjmp	.+12     	; 0x8f4 <vfprintf+0xc4>
 8e8:	8a e0       	ldi	r24, 0x0A	; 10
 8ea:	98 9e       	mul	r9, r24
 8ec:	20 0d       	add	r18, r0
 8ee:	11 24       	eor	r1, r1
 8f0:	92 2e       	mov	r9, r18
 8f2:	11 c0       	rjmp	.+34     	; 0x916 <__stack+0x17>
 8f4:	ea e0       	ldi	r30, 0x0A	; 10
 8f6:	2e 9e       	mul	r2, r30
 8f8:	20 0d       	add	r18, r0
 8fa:	11 24       	eor	r1, r1
 8fc:	22 2e       	mov	r2, r18
 8fe:	f3 2d       	mov	r31, r3
 900:	f0 62       	ori	r31, 0x20	; 32
 902:	3f 2e       	mov	r3, r31
 904:	08 c0       	rjmp	.+16     	; 0x916 <__stack+0x17>
 906:	8c 36       	cpi	r24, 0x6C	; 108
 908:	21 f4       	brne	.+8      	; 0x912 <__stack+0x13>
 90a:	83 2d       	mov	r24, r3
 90c:	80 68       	ori	r24, 0x80	; 128
 90e:	38 2e       	mov	r3, r24
 910:	02 c0       	rjmp	.+4      	; 0x916 <__stack+0x17>
 912:	88 36       	cpi	r24, 0x68	; 104
 914:	41 f4       	brne	.+16     	; 0x926 <__stack+0x27>
 916:	f7 01       	movw	r30, r14
 918:	93 fd       	sbrc	r25, 3
 91a:	85 91       	lpm	r24, Z+
 91c:	93 ff       	sbrs	r25, 3
 91e:	81 91       	ld	r24, Z+
 920:	7f 01       	movw	r14, r30
 922:	81 11       	cpse	r24, r1
 924:	b3 cf       	rjmp	.-154    	; 0x88c <vfprintf+0x5c>
 926:	98 2f       	mov	r25, r24
 928:	9f 7d       	andi	r25, 0xDF	; 223
 92a:	95 54       	subi	r25, 0x45	; 69
 92c:	93 30       	cpi	r25, 0x03	; 3
 92e:	28 f4       	brcc	.+10     	; 0x93a <__stack+0x3b>
 930:	0c 5f       	subi	r16, 0xFC	; 252
 932:	1f 4f       	sbci	r17, 0xFF	; 255
 934:	9f e3       	ldi	r25, 0x3F	; 63
 936:	99 83       	std	Y+1, r25	; 0x01
 938:	0d c0       	rjmp	.+26     	; 0x954 <__stack+0x55>
 93a:	83 36       	cpi	r24, 0x63	; 99
 93c:	31 f0       	breq	.+12     	; 0x94a <__stack+0x4b>
 93e:	83 37       	cpi	r24, 0x73	; 115
 940:	71 f0       	breq	.+28     	; 0x95e <__stack+0x5f>
 942:	83 35       	cpi	r24, 0x53	; 83
 944:	09 f0       	breq	.+2      	; 0x948 <__stack+0x49>
 946:	59 c0       	rjmp	.+178    	; 0x9fa <__stack+0xfb>
 948:	21 c0       	rjmp	.+66     	; 0x98c <__stack+0x8d>
 94a:	f8 01       	movw	r30, r16
 94c:	80 81       	ld	r24, Z
 94e:	89 83       	std	Y+1, r24	; 0x01
 950:	0e 5f       	subi	r16, 0xFE	; 254
 952:	1f 4f       	sbci	r17, 0xFF	; 255
 954:	88 24       	eor	r8, r8
 956:	83 94       	inc	r8
 958:	91 2c       	mov	r9, r1
 95a:	53 01       	movw	r10, r6
 95c:	13 c0       	rjmp	.+38     	; 0x984 <__stack+0x85>
 95e:	28 01       	movw	r4, r16
 960:	f2 e0       	ldi	r31, 0x02	; 2
 962:	4f 0e       	add	r4, r31
 964:	51 1c       	adc	r5, r1
 966:	f8 01       	movw	r30, r16
 968:	a0 80       	ld	r10, Z
 96a:	b1 80       	ldd	r11, Z+1	; 0x01
 96c:	36 fe       	sbrs	r3, 6
 96e:	03 c0       	rjmp	.+6      	; 0x976 <__stack+0x77>
 970:	69 2d       	mov	r22, r9
 972:	70 e0       	ldi	r23, 0x00	; 0
 974:	02 c0       	rjmp	.+4      	; 0x97a <__stack+0x7b>
 976:	6f ef       	ldi	r22, 0xFF	; 255
 978:	7f ef       	ldi	r23, 0xFF	; 255
 97a:	c5 01       	movw	r24, r10
 97c:	0e 94 04 06 	call	0xc08	; 0xc08 <strnlen>
 980:	4c 01       	movw	r8, r24
 982:	82 01       	movw	r16, r4
 984:	f3 2d       	mov	r31, r3
 986:	ff 77       	andi	r31, 0x7F	; 127
 988:	3f 2e       	mov	r3, r31
 98a:	16 c0       	rjmp	.+44     	; 0x9b8 <__stack+0xb9>
 98c:	28 01       	movw	r4, r16
 98e:	22 e0       	ldi	r18, 0x02	; 2
 990:	42 0e       	add	r4, r18
 992:	51 1c       	adc	r5, r1
 994:	f8 01       	movw	r30, r16
 996:	a0 80       	ld	r10, Z
 998:	b1 80       	ldd	r11, Z+1	; 0x01
 99a:	36 fe       	sbrs	r3, 6
 99c:	03 c0       	rjmp	.+6      	; 0x9a4 <__stack+0xa5>
 99e:	69 2d       	mov	r22, r9
 9a0:	70 e0       	ldi	r23, 0x00	; 0
 9a2:	02 c0       	rjmp	.+4      	; 0x9a8 <__stack+0xa9>
 9a4:	6f ef       	ldi	r22, 0xFF	; 255
 9a6:	7f ef       	ldi	r23, 0xFF	; 255
 9a8:	c5 01       	movw	r24, r10
 9aa:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <strnlen_P>
 9ae:	4c 01       	movw	r8, r24
 9b0:	f3 2d       	mov	r31, r3
 9b2:	f0 68       	ori	r31, 0x80	; 128
 9b4:	3f 2e       	mov	r3, r31
 9b6:	82 01       	movw	r16, r4
 9b8:	33 fc       	sbrc	r3, 3
 9ba:	1b c0       	rjmp	.+54     	; 0x9f2 <__stack+0xf3>
 9bc:	82 2d       	mov	r24, r2
 9be:	90 e0       	ldi	r25, 0x00	; 0
 9c0:	88 16       	cp	r8, r24
 9c2:	99 06       	cpc	r9, r25
 9c4:	b0 f4       	brcc	.+44     	; 0x9f2 <__stack+0xf3>
 9c6:	b6 01       	movw	r22, r12
 9c8:	80 e2       	ldi	r24, 0x20	; 32
 9ca:	90 e0       	ldi	r25, 0x00	; 0
 9cc:	0e 94 0f 06 	call	0xc1e	; 0xc1e <fputc>
 9d0:	2a 94       	dec	r2
 9d2:	f4 cf       	rjmp	.-24     	; 0x9bc <__stack+0xbd>
 9d4:	f5 01       	movw	r30, r10
 9d6:	37 fc       	sbrc	r3, 7
 9d8:	85 91       	lpm	r24, Z+
 9da:	37 fe       	sbrs	r3, 7
 9dc:	81 91       	ld	r24, Z+
 9de:	5f 01       	movw	r10, r30
 9e0:	b6 01       	movw	r22, r12
 9e2:	90 e0       	ldi	r25, 0x00	; 0
 9e4:	0e 94 0f 06 	call	0xc1e	; 0xc1e <fputc>
 9e8:	21 10       	cpse	r2, r1
 9ea:	2a 94       	dec	r2
 9ec:	21 e0       	ldi	r18, 0x01	; 1
 9ee:	82 1a       	sub	r8, r18
 9f0:	91 08       	sbc	r9, r1
 9f2:	81 14       	cp	r8, r1
 9f4:	91 04       	cpc	r9, r1
 9f6:	71 f7       	brne	.-36     	; 0x9d4 <__stack+0xd5>
 9f8:	e8 c0       	rjmp	.+464    	; 0xbca <__stack+0x2cb>
 9fa:	84 36       	cpi	r24, 0x64	; 100
 9fc:	11 f0       	breq	.+4      	; 0xa02 <__stack+0x103>
 9fe:	89 36       	cpi	r24, 0x69	; 105
 a00:	41 f5       	brne	.+80     	; 0xa52 <__stack+0x153>
 a02:	f8 01       	movw	r30, r16
 a04:	37 fe       	sbrs	r3, 7
 a06:	07 c0       	rjmp	.+14     	; 0xa16 <__stack+0x117>
 a08:	60 81       	ld	r22, Z
 a0a:	71 81       	ldd	r23, Z+1	; 0x01
 a0c:	82 81       	ldd	r24, Z+2	; 0x02
 a0e:	93 81       	ldd	r25, Z+3	; 0x03
 a10:	0c 5f       	subi	r16, 0xFC	; 252
 a12:	1f 4f       	sbci	r17, 0xFF	; 255
 a14:	08 c0       	rjmp	.+16     	; 0xa26 <__stack+0x127>
 a16:	60 81       	ld	r22, Z
 a18:	71 81       	ldd	r23, Z+1	; 0x01
 a1a:	07 2e       	mov	r0, r23
 a1c:	00 0c       	add	r0, r0
 a1e:	88 0b       	sbc	r24, r24
 a20:	99 0b       	sbc	r25, r25
 a22:	0e 5f       	subi	r16, 0xFE	; 254
 a24:	1f 4f       	sbci	r17, 0xFF	; 255
 a26:	f3 2d       	mov	r31, r3
 a28:	ff 76       	andi	r31, 0x6F	; 111
 a2a:	3f 2e       	mov	r3, r31
 a2c:	97 ff       	sbrs	r25, 7
 a2e:	09 c0       	rjmp	.+18     	; 0xa42 <__stack+0x143>
 a30:	90 95       	com	r25
 a32:	80 95       	com	r24
 a34:	70 95       	com	r23
 a36:	61 95       	neg	r22
 a38:	7f 4f       	sbci	r23, 0xFF	; 255
 a3a:	8f 4f       	sbci	r24, 0xFF	; 255
 a3c:	9f 4f       	sbci	r25, 0xFF	; 255
 a3e:	f0 68       	ori	r31, 0x80	; 128
 a40:	3f 2e       	mov	r3, r31
 a42:	2a e0       	ldi	r18, 0x0A	; 10
 a44:	30 e0       	ldi	r19, 0x00	; 0
 a46:	a3 01       	movw	r20, r6
 a48:	0e 94 4b 06 	call	0xc96	; 0xc96 <__ultoa_invert>
 a4c:	88 2e       	mov	r8, r24
 a4e:	86 18       	sub	r8, r6
 a50:	45 c0       	rjmp	.+138    	; 0xadc <__stack+0x1dd>
 a52:	85 37       	cpi	r24, 0x75	; 117
 a54:	31 f4       	brne	.+12     	; 0xa62 <__stack+0x163>
 a56:	23 2d       	mov	r18, r3
 a58:	2f 7e       	andi	r18, 0xEF	; 239
 a5a:	b2 2e       	mov	r11, r18
 a5c:	2a e0       	ldi	r18, 0x0A	; 10
 a5e:	30 e0       	ldi	r19, 0x00	; 0
 a60:	25 c0       	rjmp	.+74     	; 0xaac <__stack+0x1ad>
 a62:	93 2d       	mov	r25, r3
 a64:	99 7f       	andi	r25, 0xF9	; 249
 a66:	b9 2e       	mov	r11, r25
 a68:	8f 36       	cpi	r24, 0x6F	; 111
 a6a:	c1 f0       	breq	.+48     	; 0xa9c <__stack+0x19d>
 a6c:	18 f4       	brcc	.+6      	; 0xa74 <__stack+0x175>
 a6e:	88 35       	cpi	r24, 0x58	; 88
 a70:	79 f0       	breq	.+30     	; 0xa90 <__stack+0x191>
 a72:	b5 c0       	rjmp	.+362    	; 0xbde <__stack+0x2df>
 a74:	80 37       	cpi	r24, 0x70	; 112
 a76:	19 f0       	breq	.+6      	; 0xa7e <__stack+0x17f>
 a78:	88 37       	cpi	r24, 0x78	; 120
 a7a:	21 f0       	breq	.+8      	; 0xa84 <__stack+0x185>
 a7c:	b0 c0       	rjmp	.+352    	; 0xbde <__stack+0x2df>
 a7e:	e9 2f       	mov	r30, r25
 a80:	e0 61       	ori	r30, 0x10	; 16
 a82:	be 2e       	mov	r11, r30
 a84:	b4 fe       	sbrs	r11, 4
 a86:	0d c0       	rjmp	.+26     	; 0xaa2 <__stack+0x1a3>
 a88:	fb 2d       	mov	r31, r11
 a8a:	f4 60       	ori	r31, 0x04	; 4
 a8c:	bf 2e       	mov	r11, r31
 a8e:	09 c0       	rjmp	.+18     	; 0xaa2 <__stack+0x1a3>
 a90:	34 fe       	sbrs	r3, 4
 a92:	0a c0       	rjmp	.+20     	; 0xaa8 <__stack+0x1a9>
 a94:	29 2f       	mov	r18, r25
 a96:	26 60       	ori	r18, 0x06	; 6
 a98:	b2 2e       	mov	r11, r18
 a9a:	06 c0       	rjmp	.+12     	; 0xaa8 <__stack+0x1a9>
 a9c:	28 e0       	ldi	r18, 0x08	; 8
 a9e:	30 e0       	ldi	r19, 0x00	; 0
 aa0:	05 c0       	rjmp	.+10     	; 0xaac <__stack+0x1ad>
 aa2:	20 e1       	ldi	r18, 0x10	; 16
 aa4:	30 e0       	ldi	r19, 0x00	; 0
 aa6:	02 c0       	rjmp	.+4      	; 0xaac <__stack+0x1ad>
 aa8:	20 e1       	ldi	r18, 0x10	; 16
 aaa:	32 e0       	ldi	r19, 0x02	; 2
 aac:	f8 01       	movw	r30, r16
 aae:	b7 fe       	sbrs	r11, 7
 ab0:	07 c0       	rjmp	.+14     	; 0xac0 <__stack+0x1c1>
 ab2:	60 81       	ld	r22, Z
 ab4:	71 81       	ldd	r23, Z+1	; 0x01
 ab6:	82 81       	ldd	r24, Z+2	; 0x02
 ab8:	93 81       	ldd	r25, Z+3	; 0x03
 aba:	0c 5f       	subi	r16, 0xFC	; 252
 abc:	1f 4f       	sbci	r17, 0xFF	; 255
 abe:	06 c0       	rjmp	.+12     	; 0xacc <__stack+0x1cd>
 ac0:	60 81       	ld	r22, Z
 ac2:	71 81       	ldd	r23, Z+1	; 0x01
 ac4:	80 e0       	ldi	r24, 0x00	; 0
 ac6:	90 e0       	ldi	r25, 0x00	; 0
 ac8:	0e 5f       	subi	r16, 0xFE	; 254
 aca:	1f 4f       	sbci	r17, 0xFF	; 255
 acc:	a3 01       	movw	r20, r6
 ace:	0e 94 4b 06 	call	0xc96	; 0xc96 <__ultoa_invert>
 ad2:	88 2e       	mov	r8, r24
 ad4:	86 18       	sub	r8, r6
 ad6:	fb 2d       	mov	r31, r11
 ad8:	ff 77       	andi	r31, 0x7F	; 127
 ada:	3f 2e       	mov	r3, r31
 adc:	36 fe       	sbrs	r3, 6
 ade:	0d c0       	rjmp	.+26     	; 0xafa <__stack+0x1fb>
 ae0:	23 2d       	mov	r18, r3
 ae2:	2e 7f       	andi	r18, 0xFE	; 254
 ae4:	a2 2e       	mov	r10, r18
 ae6:	89 14       	cp	r8, r9
 ae8:	58 f4       	brcc	.+22     	; 0xb00 <__stack+0x201>
 aea:	34 fe       	sbrs	r3, 4
 aec:	0b c0       	rjmp	.+22     	; 0xb04 <__stack+0x205>
 aee:	32 fc       	sbrc	r3, 2
 af0:	09 c0       	rjmp	.+18     	; 0xb04 <__stack+0x205>
 af2:	83 2d       	mov	r24, r3
 af4:	8e 7e       	andi	r24, 0xEE	; 238
 af6:	a8 2e       	mov	r10, r24
 af8:	05 c0       	rjmp	.+10     	; 0xb04 <__stack+0x205>
 afa:	b8 2c       	mov	r11, r8
 afc:	a3 2c       	mov	r10, r3
 afe:	03 c0       	rjmp	.+6      	; 0xb06 <__stack+0x207>
 b00:	b8 2c       	mov	r11, r8
 b02:	01 c0       	rjmp	.+2      	; 0xb06 <__stack+0x207>
 b04:	b9 2c       	mov	r11, r9
 b06:	a4 fe       	sbrs	r10, 4
 b08:	0f c0       	rjmp	.+30     	; 0xb28 <__stack+0x229>
 b0a:	fe 01       	movw	r30, r28
 b0c:	e8 0d       	add	r30, r8
 b0e:	f1 1d       	adc	r31, r1
 b10:	80 81       	ld	r24, Z
 b12:	80 33       	cpi	r24, 0x30	; 48
 b14:	21 f4       	brne	.+8      	; 0xb1e <__stack+0x21f>
 b16:	9a 2d       	mov	r25, r10
 b18:	99 7e       	andi	r25, 0xE9	; 233
 b1a:	a9 2e       	mov	r10, r25
 b1c:	09 c0       	rjmp	.+18     	; 0xb30 <__stack+0x231>
 b1e:	a2 fe       	sbrs	r10, 2
 b20:	06 c0       	rjmp	.+12     	; 0xb2e <__stack+0x22f>
 b22:	b3 94       	inc	r11
 b24:	b3 94       	inc	r11
 b26:	04 c0       	rjmp	.+8      	; 0xb30 <__stack+0x231>
 b28:	8a 2d       	mov	r24, r10
 b2a:	86 78       	andi	r24, 0x86	; 134
 b2c:	09 f0       	breq	.+2      	; 0xb30 <__stack+0x231>
 b2e:	b3 94       	inc	r11
 b30:	a3 fc       	sbrc	r10, 3
 b32:	11 c0       	rjmp	.+34     	; 0xb56 <__stack+0x257>
 b34:	a0 fe       	sbrs	r10, 0
 b36:	06 c0       	rjmp	.+12     	; 0xb44 <__stack+0x245>
 b38:	b2 14       	cp	r11, r2
 b3a:	88 f4       	brcc	.+34     	; 0xb5e <__stack+0x25f>
 b3c:	28 0c       	add	r2, r8
 b3e:	92 2c       	mov	r9, r2
 b40:	9b 18       	sub	r9, r11
 b42:	0e c0       	rjmp	.+28     	; 0xb60 <__stack+0x261>
 b44:	b2 14       	cp	r11, r2
 b46:	60 f4       	brcc	.+24     	; 0xb60 <__stack+0x261>
 b48:	b6 01       	movw	r22, r12
 b4a:	80 e2       	ldi	r24, 0x20	; 32
 b4c:	90 e0       	ldi	r25, 0x00	; 0
 b4e:	0e 94 0f 06 	call	0xc1e	; 0xc1e <fputc>
 b52:	b3 94       	inc	r11
 b54:	f7 cf       	rjmp	.-18     	; 0xb44 <__stack+0x245>
 b56:	b2 14       	cp	r11, r2
 b58:	18 f4       	brcc	.+6      	; 0xb60 <__stack+0x261>
 b5a:	2b 18       	sub	r2, r11
 b5c:	02 c0       	rjmp	.+4      	; 0xb62 <__stack+0x263>
 b5e:	98 2c       	mov	r9, r8
 b60:	21 2c       	mov	r2, r1
 b62:	a4 fe       	sbrs	r10, 4
 b64:	10 c0       	rjmp	.+32     	; 0xb86 <__stack+0x287>
 b66:	b6 01       	movw	r22, r12
 b68:	80 e3       	ldi	r24, 0x30	; 48
 b6a:	90 e0       	ldi	r25, 0x00	; 0
 b6c:	0e 94 0f 06 	call	0xc1e	; 0xc1e <fputc>
 b70:	a2 fe       	sbrs	r10, 2
 b72:	17 c0       	rjmp	.+46     	; 0xba2 <__stack+0x2a3>
 b74:	a1 fc       	sbrc	r10, 1
 b76:	03 c0       	rjmp	.+6      	; 0xb7e <__stack+0x27f>
 b78:	88 e7       	ldi	r24, 0x78	; 120
 b7a:	90 e0       	ldi	r25, 0x00	; 0
 b7c:	02 c0       	rjmp	.+4      	; 0xb82 <__stack+0x283>
 b7e:	88 e5       	ldi	r24, 0x58	; 88
 b80:	90 e0       	ldi	r25, 0x00	; 0
 b82:	b6 01       	movw	r22, r12
 b84:	0c c0       	rjmp	.+24     	; 0xb9e <__stack+0x29f>
 b86:	8a 2d       	mov	r24, r10
 b88:	86 78       	andi	r24, 0x86	; 134
 b8a:	59 f0       	breq	.+22     	; 0xba2 <__stack+0x2a3>
 b8c:	a1 fe       	sbrs	r10, 1
 b8e:	02 c0       	rjmp	.+4      	; 0xb94 <__stack+0x295>
 b90:	8b e2       	ldi	r24, 0x2B	; 43
 b92:	01 c0       	rjmp	.+2      	; 0xb96 <__stack+0x297>
 b94:	80 e2       	ldi	r24, 0x20	; 32
 b96:	a7 fc       	sbrc	r10, 7
 b98:	8d e2       	ldi	r24, 0x2D	; 45
 b9a:	b6 01       	movw	r22, r12
 b9c:	90 e0       	ldi	r25, 0x00	; 0
 b9e:	0e 94 0f 06 	call	0xc1e	; 0xc1e <fputc>
 ba2:	89 14       	cp	r8, r9
 ba4:	38 f4       	brcc	.+14     	; 0xbb4 <__stack+0x2b5>
 ba6:	b6 01       	movw	r22, r12
 ba8:	80 e3       	ldi	r24, 0x30	; 48
 baa:	90 e0       	ldi	r25, 0x00	; 0
 bac:	0e 94 0f 06 	call	0xc1e	; 0xc1e <fputc>
 bb0:	9a 94       	dec	r9
 bb2:	f7 cf       	rjmp	.-18     	; 0xba2 <__stack+0x2a3>
 bb4:	8a 94       	dec	r8
 bb6:	f3 01       	movw	r30, r6
 bb8:	e8 0d       	add	r30, r8
 bba:	f1 1d       	adc	r31, r1
 bbc:	80 81       	ld	r24, Z
 bbe:	b6 01       	movw	r22, r12
 bc0:	90 e0       	ldi	r25, 0x00	; 0
 bc2:	0e 94 0f 06 	call	0xc1e	; 0xc1e <fputc>
 bc6:	81 10       	cpse	r8, r1
 bc8:	f5 cf       	rjmp	.-22     	; 0xbb4 <__stack+0x2b5>
 bca:	22 20       	and	r2, r2
 bcc:	09 f4       	brne	.+2      	; 0xbd0 <__stack+0x2d1>
 bce:	42 ce       	rjmp	.-892    	; 0x854 <vfprintf+0x24>
 bd0:	b6 01       	movw	r22, r12
 bd2:	80 e2       	ldi	r24, 0x20	; 32
 bd4:	90 e0       	ldi	r25, 0x00	; 0
 bd6:	0e 94 0f 06 	call	0xc1e	; 0xc1e <fputc>
 bda:	2a 94       	dec	r2
 bdc:	f6 cf       	rjmp	.-20     	; 0xbca <__stack+0x2cb>
 bde:	f6 01       	movw	r30, r12
 be0:	86 81       	ldd	r24, Z+6	; 0x06
 be2:	97 81       	ldd	r25, Z+7	; 0x07
 be4:	02 c0       	rjmp	.+4      	; 0xbea <__stack+0x2eb>
 be6:	8f ef       	ldi	r24, 0xFF	; 255
 be8:	9f ef       	ldi	r25, 0xFF	; 255
 bea:	2b 96       	adiw	r28, 0x0b	; 11
 bec:	e2 e1       	ldi	r30, 0x12	; 18
 bee:	0c 94 f7 06 	jmp	0xdee	; 0xdee <__epilogue_restores__>

00000bf2 <strnlen_P>:
 bf2:	fc 01       	movw	r30, r24
 bf4:	05 90       	lpm	r0, Z+
 bf6:	61 50       	subi	r22, 0x01	; 1
 bf8:	70 40       	sbci	r23, 0x00	; 0
 bfa:	01 10       	cpse	r0, r1
 bfc:	d8 f7       	brcc	.-10     	; 0xbf4 <strnlen_P+0x2>
 bfe:	80 95       	com	r24
 c00:	90 95       	com	r25
 c02:	8e 0f       	add	r24, r30
 c04:	9f 1f       	adc	r25, r31
 c06:	08 95       	ret

00000c08 <strnlen>:
 c08:	fc 01       	movw	r30, r24
 c0a:	61 50       	subi	r22, 0x01	; 1
 c0c:	70 40       	sbci	r23, 0x00	; 0
 c0e:	01 90       	ld	r0, Z+
 c10:	01 10       	cpse	r0, r1
 c12:	d8 f7       	brcc	.-10     	; 0xc0a <strnlen+0x2>
 c14:	80 95       	com	r24
 c16:	90 95       	com	r25
 c18:	8e 0f       	add	r24, r30
 c1a:	9f 1f       	adc	r25, r31
 c1c:	08 95       	ret

00000c1e <fputc>:
 c1e:	0f 93       	push	r16
 c20:	1f 93       	push	r17
 c22:	cf 93       	push	r28
 c24:	df 93       	push	r29
 c26:	fb 01       	movw	r30, r22
 c28:	23 81       	ldd	r18, Z+3	; 0x03
 c2a:	21 fd       	sbrc	r18, 1
 c2c:	03 c0       	rjmp	.+6      	; 0xc34 <fputc+0x16>
 c2e:	8f ef       	ldi	r24, 0xFF	; 255
 c30:	9f ef       	ldi	r25, 0xFF	; 255
 c32:	2c c0       	rjmp	.+88     	; 0xc8c <fputc+0x6e>
 c34:	22 ff       	sbrs	r18, 2
 c36:	16 c0       	rjmp	.+44     	; 0xc64 <fputc+0x46>
 c38:	46 81       	ldd	r20, Z+6	; 0x06
 c3a:	57 81       	ldd	r21, Z+7	; 0x07
 c3c:	24 81       	ldd	r18, Z+4	; 0x04
 c3e:	35 81       	ldd	r19, Z+5	; 0x05
 c40:	42 17       	cp	r20, r18
 c42:	53 07       	cpc	r21, r19
 c44:	44 f4       	brge	.+16     	; 0xc56 <fputc+0x38>
 c46:	a0 81       	ld	r26, Z
 c48:	b1 81       	ldd	r27, Z+1	; 0x01
 c4a:	9d 01       	movw	r18, r26
 c4c:	2f 5f       	subi	r18, 0xFF	; 255
 c4e:	3f 4f       	sbci	r19, 0xFF	; 255
 c50:	31 83       	std	Z+1, r19	; 0x01
 c52:	20 83       	st	Z, r18
 c54:	8c 93       	st	X, r24
 c56:	26 81       	ldd	r18, Z+6	; 0x06
 c58:	37 81       	ldd	r19, Z+7	; 0x07
 c5a:	2f 5f       	subi	r18, 0xFF	; 255
 c5c:	3f 4f       	sbci	r19, 0xFF	; 255
 c5e:	37 83       	std	Z+7, r19	; 0x07
 c60:	26 83       	std	Z+6, r18	; 0x06
 c62:	14 c0       	rjmp	.+40     	; 0xc8c <fputc+0x6e>
 c64:	8b 01       	movw	r16, r22
 c66:	ec 01       	movw	r28, r24
 c68:	fb 01       	movw	r30, r22
 c6a:	00 84       	ldd	r0, Z+8	; 0x08
 c6c:	f1 85       	ldd	r31, Z+9	; 0x09
 c6e:	e0 2d       	mov	r30, r0
 c70:	09 95       	icall
 c72:	89 2b       	or	r24, r25
 c74:	e1 f6       	brne	.-72     	; 0xc2e <fputc+0x10>
 c76:	d8 01       	movw	r26, r16
 c78:	16 96       	adiw	r26, 0x06	; 6
 c7a:	8d 91       	ld	r24, X+
 c7c:	9c 91       	ld	r25, X
 c7e:	17 97       	sbiw	r26, 0x07	; 7
 c80:	01 96       	adiw	r24, 0x01	; 1
 c82:	17 96       	adiw	r26, 0x07	; 7
 c84:	9c 93       	st	X, r25
 c86:	8e 93       	st	-X, r24
 c88:	16 97       	sbiw	r26, 0x06	; 6
 c8a:	ce 01       	movw	r24, r28
 c8c:	df 91       	pop	r29
 c8e:	cf 91       	pop	r28
 c90:	1f 91       	pop	r17
 c92:	0f 91       	pop	r16
 c94:	08 95       	ret

00000c96 <__ultoa_invert>:
 c96:	fa 01       	movw	r30, r20
 c98:	aa 27       	eor	r26, r26
 c9a:	28 30       	cpi	r18, 0x08	; 8
 c9c:	51 f1       	breq	.+84     	; 0xcf2 <__ultoa_invert+0x5c>
 c9e:	20 31       	cpi	r18, 0x10	; 16
 ca0:	81 f1       	breq	.+96     	; 0xd02 <__ultoa_invert+0x6c>
 ca2:	e8 94       	clt
 ca4:	6f 93       	push	r22
 ca6:	6e 7f       	andi	r22, 0xFE	; 254
 ca8:	6e 5f       	subi	r22, 0xFE	; 254
 caa:	7f 4f       	sbci	r23, 0xFF	; 255
 cac:	8f 4f       	sbci	r24, 0xFF	; 255
 cae:	9f 4f       	sbci	r25, 0xFF	; 255
 cb0:	af 4f       	sbci	r26, 0xFF	; 255
 cb2:	b1 e0       	ldi	r27, 0x01	; 1
 cb4:	3e d0       	rcall	.+124    	; 0xd32 <__ultoa_invert+0x9c>
 cb6:	b4 e0       	ldi	r27, 0x04	; 4
 cb8:	3c d0       	rcall	.+120    	; 0xd32 <__ultoa_invert+0x9c>
 cba:	67 0f       	add	r22, r23
 cbc:	78 1f       	adc	r23, r24
 cbe:	89 1f       	adc	r24, r25
 cc0:	9a 1f       	adc	r25, r26
 cc2:	a1 1d       	adc	r26, r1
 cc4:	68 0f       	add	r22, r24
 cc6:	79 1f       	adc	r23, r25
 cc8:	8a 1f       	adc	r24, r26
 cca:	91 1d       	adc	r25, r1
 ccc:	a1 1d       	adc	r26, r1
 cce:	6a 0f       	add	r22, r26
 cd0:	71 1d       	adc	r23, r1
 cd2:	81 1d       	adc	r24, r1
 cd4:	91 1d       	adc	r25, r1
 cd6:	a1 1d       	adc	r26, r1
 cd8:	20 d0       	rcall	.+64     	; 0xd1a <__ultoa_invert+0x84>
 cda:	09 f4       	brne	.+2      	; 0xcde <__ultoa_invert+0x48>
 cdc:	68 94       	set
 cde:	3f 91       	pop	r19
 ce0:	2a e0       	ldi	r18, 0x0A	; 10
 ce2:	26 9f       	mul	r18, r22
 ce4:	11 24       	eor	r1, r1
 ce6:	30 19       	sub	r19, r0
 ce8:	30 5d       	subi	r19, 0xD0	; 208
 cea:	31 93       	st	Z+, r19
 cec:	de f6       	brtc	.-74     	; 0xca4 <__ultoa_invert+0xe>
 cee:	cf 01       	movw	r24, r30
 cf0:	08 95       	ret
 cf2:	46 2f       	mov	r20, r22
 cf4:	47 70       	andi	r20, 0x07	; 7
 cf6:	40 5d       	subi	r20, 0xD0	; 208
 cf8:	41 93       	st	Z+, r20
 cfa:	b3 e0       	ldi	r27, 0x03	; 3
 cfc:	0f d0       	rcall	.+30     	; 0xd1c <__ultoa_invert+0x86>
 cfe:	c9 f7       	brne	.-14     	; 0xcf2 <__ultoa_invert+0x5c>
 d00:	f6 cf       	rjmp	.-20     	; 0xcee <__ultoa_invert+0x58>
 d02:	46 2f       	mov	r20, r22
 d04:	4f 70       	andi	r20, 0x0F	; 15
 d06:	40 5d       	subi	r20, 0xD0	; 208
 d08:	4a 33       	cpi	r20, 0x3A	; 58
 d0a:	18 f0       	brcs	.+6      	; 0xd12 <__ultoa_invert+0x7c>
 d0c:	49 5d       	subi	r20, 0xD9	; 217
 d0e:	31 fd       	sbrc	r19, 1
 d10:	40 52       	subi	r20, 0x20	; 32
 d12:	41 93       	st	Z+, r20
 d14:	02 d0       	rcall	.+4      	; 0xd1a <__ultoa_invert+0x84>
 d16:	a9 f7       	brne	.-22     	; 0xd02 <__ultoa_invert+0x6c>
 d18:	ea cf       	rjmp	.-44     	; 0xcee <__ultoa_invert+0x58>
 d1a:	b4 e0       	ldi	r27, 0x04	; 4
 d1c:	a6 95       	lsr	r26
 d1e:	97 95       	ror	r25
 d20:	87 95       	ror	r24
 d22:	77 95       	ror	r23
 d24:	67 95       	ror	r22
 d26:	ba 95       	dec	r27
 d28:	c9 f7       	brne	.-14     	; 0xd1c <__ultoa_invert+0x86>
 d2a:	00 97       	sbiw	r24, 0x00	; 0
 d2c:	61 05       	cpc	r22, r1
 d2e:	71 05       	cpc	r23, r1
 d30:	08 95       	ret
 d32:	9b 01       	movw	r18, r22
 d34:	ac 01       	movw	r20, r24
 d36:	0a 2e       	mov	r0, r26
 d38:	06 94       	lsr	r0
 d3a:	57 95       	ror	r21
 d3c:	47 95       	ror	r20
 d3e:	37 95       	ror	r19
 d40:	27 95       	ror	r18
 d42:	ba 95       	dec	r27
 d44:	c9 f7       	brne	.-14     	; 0xd38 <__ultoa_invert+0xa2>
 d46:	62 0f       	add	r22, r18
 d48:	73 1f       	adc	r23, r19
 d4a:	84 1f       	adc	r24, r20
 d4c:	95 1f       	adc	r25, r21
 d4e:	a0 1d       	adc	r26, r0
 d50:	08 95       	ret

00000d52 <__divmodsi4>:
 d52:	05 2e       	mov	r0, r21
 d54:	97 fb       	bst	r25, 7
 d56:	1e f4       	brtc	.+6      	; 0xd5e <__divmodsi4+0xc>
 d58:	00 94       	com	r0
 d5a:	0e 94 c0 06 	call	0xd80	; 0xd80 <__negsi2>
 d5e:	57 fd       	sbrc	r21, 7
 d60:	07 d0       	rcall	.+14     	; 0xd70 <__divmodsi4_neg2>
 d62:	0e 94 12 07 	call	0xe24	; 0xe24 <__udivmodsi4>
 d66:	07 fc       	sbrc	r0, 7
 d68:	03 d0       	rcall	.+6      	; 0xd70 <__divmodsi4_neg2>
 d6a:	4e f4       	brtc	.+18     	; 0xd7e <__divmodsi4_exit>
 d6c:	0c 94 c0 06 	jmp	0xd80	; 0xd80 <__negsi2>

00000d70 <__divmodsi4_neg2>:
 d70:	50 95       	com	r21
 d72:	40 95       	com	r20
 d74:	30 95       	com	r19
 d76:	21 95       	neg	r18
 d78:	3f 4f       	sbci	r19, 0xFF	; 255
 d7a:	4f 4f       	sbci	r20, 0xFF	; 255
 d7c:	5f 4f       	sbci	r21, 0xFF	; 255

00000d7e <__divmodsi4_exit>:
 d7e:	08 95       	ret

00000d80 <__negsi2>:
 d80:	90 95       	com	r25
 d82:	80 95       	com	r24
 d84:	70 95       	com	r23
 d86:	61 95       	neg	r22
 d88:	7f 4f       	sbci	r23, 0xFF	; 255
 d8a:	8f 4f       	sbci	r24, 0xFF	; 255
 d8c:	9f 4f       	sbci	r25, 0xFF	; 255
 d8e:	08 95       	ret

00000d90 <__muluhisi3>:
 d90:	0e 94 34 07 	call	0xe68	; 0xe68 <__umulhisi3>
 d94:	a5 9f       	mul	r26, r21
 d96:	90 0d       	add	r25, r0
 d98:	b4 9f       	mul	r27, r20
 d9a:	90 0d       	add	r25, r0
 d9c:	a4 9f       	mul	r26, r20
 d9e:	80 0d       	add	r24, r0
 da0:	91 1d       	adc	r25, r1
 da2:	11 24       	eor	r1, r1
 da4:	08 95       	ret

00000da6 <__mulshisi3>:
 da6:	b7 ff       	sbrs	r27, 7
 da8:	0c 94 c8 06 	jmp	0xd90	; 0xd90 <__muluhisi3>

00000dac <__mulohisi3>:
 dac:	0e 94 c8 06 	call	0xd90	; 0xd90 <__muluhisi3>
 db0:	82 1b       	sub	r24, r18
 db2:	93 0b       	sbc	r25, r19
 db4:	08 95       	ret

00000db6 <__prologue_saves__>:
 db6:	2f 92       	push	r2
 db8:	3f 92       	push	r3
 dba:	4f 92       	push	r4
 dbc:	5f 92       	push	r5
 dbe:	6f 92       	push	r6
 dc0:	7f 92       	push	r7
 dc2:	8f 92       	push	r8
 dc4:	9f 92       	push	r9
 dc6:	af 92       	push	r10
 dc8:	bf 92       	push	r11
 dca:	cf 92       	push	r12
 dcc:	df 92       	push	r13
 dce:	ef 92       	push	r14
 dd0:	ff 92       	push	r15
 dd2:	0f 93       	push	r16
 dd4:	1f 93       	push	r17
 dd6:	cf 93       	push	r28
 dd8:	df 93       	push	r29
 dda:	cd b7       	in	r28, 0x3d	; 61
 ddc:	de b7       	in	r29, 0x3e	; 62
 dde:	ca 1b       	sub	r28, r26
 de0:	db 0b       	sbc	r29, r27
 de2:	0f b6       	in	r0, 0x3f	; 63
 de4:	f8 94       	cli
 de6:	de bf       	out	0x3e, r29	; 62
 de8:	0f be       	out	0x3f, r0	; 63
 dea:	cd bf       	out	0x3d, r28	; 61
 dec:	09 94       	ijmp

00000dee <__epilogue_restores__>:
 dee:	2a 88       	ldd	r2, Y+18	; 0x12
 df0:	39 88       	ldd	r3, Y+17	; 0x11
 df2:	48 88       	ldd	r4, Y+16	; 0x10
 df4:	5f 84       	ldd	r5, Y+15	; 0x0f
 df6:	6e 84       	ldd	r6, Y+14	; 0x0e
 df8:	7d 84       	ldd	r7, Y+13	; 0x0d
 dfa:	8c 84       	ldd	r8, Y+12	; 0x0c
 dfc:	9b 84       	ldd	r9, Y+11	; 0x0b
 dfe:	aa 84       	ldd	r10, Y+10	; 0x0a
 e00:	b9 84       	ldd	r11, Y+9	; 0x09
 e02:	c8 84       	ldd	r12, Y+8	; 0x08
 e04:	df 80       	ldd	r13, Y+7	; 0x07
 e06:	ee 80       	ldd	r14, Y+6	; 0x06
 e08:	fd 80       	ldd	r15, Y+5	; 0x05
 e0a:	0c 81       	ldd	r16, Y+4	; 0x04
 e0c:	1b 81       	ldd	r17, Y+3	; 0x03
 e0e:	aa 81       	ldd	r26, Y+2	; 0x02
 e10:	b9 81       	ldd	r27, Y+1	; 0x01
 e12:	ce 0f       	add	r28, r30
 e14:	d1 1d       	adc	r29, r1
 e16:	0f b6       	in	r0, 0x3f	; 63
 e18:	f8 94       	cli
 e1a:	de bf       	out	0x3e, r29	; 62
 e1c:	0f be       	out	0x3f, r0	; 63
 e1e:	cd bf       	out	0x3d, r28	; 61
 e20:	ed 01       	movw	r28, r26
 e22:	08 95       	ret

00000e24 <__udivmodsi4>:
 e24:	a1 e2       	ldi	r26, 0x21	; 33
 e26:	1a 2e       	mov	r1, r26
 e28:	aa 1b       	sub	r26, r26
 e2a:	bb 1b       	sub	r27, r27
 e2c:	fd 01       	movw	r30, r26
 e2e:	0d c0       	rjmp	.+26     	; 0xe4a <__udivmodsi4_ep>

00000e30 <__udivmodsi4_loop>:
 e30:	aa 1f       	adc	r26, r26
 e32:	bb 1f       	adc	r27, r27
 e34:	ee 1f       	adc	r30, r30
 e36:	ff 1f       	adc	r31, r31
 e38:	a2 17       	cp	r26, r18
 e3a:	b3 07       	cpc	r27, r19
 e3c:	e4 07       	cpc	r30, r20
 e3e:	f5 07       	cpc	r31, r21
 e40:	20 f0       	brcs	.+8      	; 0xe4a <__udivmodsi4_ep>
 e42:	a2 1b       	sub	r26, r18
 e44:	b3 0b       	sbc	r27, r19
 e46:	e4 0b       	sbc	r30, r20
 e48:	f5 0b       	sbc	r31, r21

00000e4a <__udivmodsi4_ep>:
 e4a:	66 1f       	adc	r22, r22
 e4c:	77 1f       	adc	r23, r23
 e4e:	88 1f       	adc	r24, r24
 e50:	99 1f       	adc	r25, r25
 e52:	1a 94       	dec	r1
 e54:	69 f7       	brne	.-38     	; 0xe30 <__udivmodsi4_loop>
 e56:	60 95       	com	r22
 e58:	70 95       	com	r23
 e5a:	80 95       	com	r24
 e5c:	90 95       	com	r25
 e5e:	9b 01       	movw	r18, r22
 e60:	ac 01       	movw	r20, r24
 e62:	bd 01       	movw	r22, r26
 e64:	cf 01       	movw	r24, r30
 e66:	08 95       	ret

00000e68 <__umulhisi3>:
 e68:	a2 9f       	mul	r26, r18
 e6a:	b0 01       	movw	r22, r0
 e6c:	b3 9f       	mul	r27, r19
 e6e:	c0 01       	movw	r24, r0
 e70:	a3 9f       	mul	r26, r19
 e72:	70 0d       	add	r23, r0
 e74:	81 1d       	adc	r24, r1
 e76:	11 24       	eor	r1, r1
 e78:	91 1d       	adc	r25, r1
 e7a:	b2 9f       	mul	r27, r18
 e7c:	70 0d       	add	r23, r0
 e7e:	81 1d       	adc	r24, r1
 e80:	11 24       	eor	r1, r1
 e82:	91 1d       	adc	r25, r1
 e84:	08 95       	ret

00000e86 <_exit>:
 e86:	f8 94       	cli

00000e88 <__stop_program>:
 e88:	ff cf       	rjmp	.-2      	; 0xe88 <__stop_program>
